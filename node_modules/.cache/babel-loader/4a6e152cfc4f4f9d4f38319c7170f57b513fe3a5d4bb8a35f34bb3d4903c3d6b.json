{"ast":null,"code":"import React from'react';import{Card,Typography,Button}from'antd/lib/index';import styled from'styled-components';import{getAssetPath}from'../utils';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Title,Text}=Typography;const ContainerWrapper=styled.div`\n  padding: 16px;\n  max-width: 800px;\n  margin: 0 auto;\n`;const ShapeGrid=styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 16px;\n  margin-top: 20px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 12px;\n  }\n  \n  @media (max-width: 380px) {\n    grid-template-columns: 1fr;\n  }\n`;const ShapeCard=styled(Card)`\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border-radius: 12px;\n  overflow: hidden;\n  height: 100%;\n  border: 1px solid #f0f0f0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  \n  .ant-card-body {\n    padding: 16px;\n  }\n  \n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n  }\n`;const ImageContainer=styled.div`\n  width: 100%;\n  padding-top: 100%; /* Создает квадратную форму */\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 10px;\n  background-color: #f8f8f8;\n  \n  /* Стили для стандартного img */\n  img {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-fit: cover; /* Возвращаем cover, чтобы заполнить контейнер */\n    object-position: center;\n    /* border: 1px solid red; // Убираем рамку */\n  }\n`;const CardContent=styled.div`\n  padding: 0 4px;\n  text-align: center;\n`;const ShapeTitle=styled(Title)`\n  margin-bottom: 8px !important;\n  font-size: 18px !important;\n  color: #000000 !important;\n  text-align: center;\n  \n  @media (max-width: 576px) {\n    font-size: 16px !important;\n  }\n`;const ShapeDescription=styled(Text)`\n  color: #000000;\n  line-height: 1.6;\n  display: block;\n  margin-bottom: 8px;\n  font-size: 14px;\n  text-align: center;\n  \n  @media (max-width: 576px) {\n    font-size: 12px;\n  }\n`;const ActionButton=styled(Button)`\n  min-width: 120px;\n`;const BackButton=styled(Button)`\n  min-width: 100px;\n  background-color: #F2F2F7;\n  font-weight: 500;\n  height: 36px;\n  border-radius: 10px;\n  box-shadow: none;\n  border: 1px solid #E5E5EA;\n  color: #000000;\n  \n  &:hover {\n    border-color: #007AFF;\n    color: #007AFF;\n  }\n`;const CloseButton=styled(Button)`\n  min-width: 100px;\n  background-color: #F2F2F7;\n  font-weight: 500;\n  height: 36px;\n  border-radius: 10px;\n  box-shadow: none;\n  border: 1px solid #E5E5EA;\n  color: #000000;\n  \n  &:hover {\n    border-color: #FF3B30;\n    color: #FF3B30;\n  }\n`;const Navigation=styled.div`  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;const NavigationButtons=styled.div`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n`;const ShapeStep=_ref=>{let{onSelect,onBack,onClose}=_ref;const shapes=[{id:'kruglaya',name:'Круглая',description:'Классическая круглая форма',image:getAssetPath('images/bags/shapes/kruglaya.jpg')},{id:'pryamougolnaya',name:'Прямоугольная',description:'Удобная прямоугольная форма',image:getAssetPath('images/bags/shapes/pryamougolnaya.jpg'),titleStyle:{whiteSpace:'nowrap'}},{id:'kvadratnaya',name:'Квадратная',description:'Компактная квадратная форма',image:getAssetPath('images/bags/shapes/kvadratnaya.jpg')},{id:'trapeciya',name:'Трапеция',description:'Стильная форма трапеция',image:getAssetPath('images/bags/shapes/trapeciya.jpg')},{id:'mesyac',name:'Месяц',description:'Элегантная форма полумесяца',image:getAssetPath('images/bags/shapes/mesyac.jpg')},{id:'serdce',name:'Сердце',description:'Романтичная форма сердца',image:getAssetPath('images/bags/shapes/serdce.jpg')}];const fallbackImagePath=getAssetPath('images/bag-placeholder.jpg');console.log(\"[ShapeStep] Fallback Image Path:\",fallbackImagePath);return/*#__PURE__*/_jsxs(ContainerWrapper,{children:[/*#__PURE__*/_jsxs(Navigation,{children:[/*#__PURE__*/_jsx(Title,{level:4,style:{margin:0,color:'#000000'},children:\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0444\\u043E\\u0440\\u043C\\u0443 \\u0441\\u0443\\u043C\\u043A\\u0438\"}),/*#__PURE__*/_jsx(NavigationButtons,{children:/*#__PURE__*/_jsx(BackButton,{size:\"large\",onClick:onBack,children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"})})]}),/*#__PURE__*/_jsx(ShapeGrid,{children:shapes.map(shape=>/*#__PURE__*/_jsxs(ShapeCard,{hoverable:true,onClick:()=>onSelect(shape.name),children:[/*#__PURE__*/_jsx(ImageContainer,{children:/*#__PURE__*/_jsx(\"img\",{src:shape.image,alt:shape.name,onError:e=>{// Попытка загрузить fallback изображение при ошибке\ne.target.onerror=null;// Предотвращаем бесконечный цикл onError\ne.target.src=fallbackImagePath;console.log(`[ShapeStep] Error loading ${shape.image}, trying fallback ${fallbackImagePath}`);}})}),/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(ShapeTitle,{level:5,style:shape.titleStyle,children:shape.name}),/*#__PURE__*/_jsx(ShapeDescription,{children:shape.description})]})]},shape.id))})]});};export default ShapeStep;","map":{"version":3,"names":["React","Card","Typography","Button","styled","getAssetPath","jsx","_jsx","jsxs","_jsxs","Title","Text","ContainerWrapper","div","ShapeGrid","ShapeCard","ImageContainer","CardContent","ShapeTitle","ShapeDescription","ActionButton","BackButton","CloseButton","Navigation","NavigationButtons","ShapeStep","_ref","onSelect","onBack","onClose","shapes","id","name","description","image","titleStyle","whiteSpace","fallbackImagePath","console","log","children","level","style","margin","color","size","onClick","map","shape","hoverable","src","alt","onError","e","target","onerror"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/src/components/ShapeStep.tsx"],"sourcesContent":["import React from 'react';\nimport { Card, Typography, Button } from 'antd/lib/index';\nimport styled from 'styled-components';\nimport { getAssetPath } from '../utils';\nimport { StepProps } from '../types';\n\nconst { Title, Text } = Typography;\n\ninterface ShapeStepProps extends StepProps {\n  onSelect: (value: string) => void;\n  onClose?: () => void;\n}\n\nconst ContainerWrapper = styled.div`\n  padding: 16px;\n  max-width: 800px;\n  margin: 0 auto;\n`;\n\nconst ShapeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 16px;\n  margin-top: 20px;\n  \n  @media (max-width: 576px) {\n    grid-template-columns: repeat(2, 1fr);\n    gap: 12px;\n  }\n  \n  @media (max-width: 380px) {\n    grid-template-columns: 1fr;\n  }\n`;\n\nconst ShapeCard = styled(Card)`\n  cursor: pointer;\n  transition: all 0.3s ease;\n  border-radius: 12px;\n  overflow: hidden;\n  height: 100%;\n  border: 1px solid #f0f0f0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  \n  .ant-card-body {\n    padding: 16px;\n  }\n  \n  &:hover {\n    transform: translateY(-4px);\n    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\n  }\n`;\n\nconst ImageContainer = styled.div`\n  width: 100%;\n  padding-top: 100%; /* Создает квадратную форму */\n  position: relative;\n  overflow: hidden;\n  margin-bottom: 10px;\n  background-color: #f8f8f8;\n  \n  /* Стили для стандартного img */\n  img {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    object-fit: cover; /* Возвращаем cover, чтобы заполнить контейнер */\n    object-position: center;\n    /* border: 1px solid red; // Убираем рамку */\n  }\n`;\n\nconst CardContent = styled.div`\n  padding: 0 4px;\n  text-align: center;\n`;\n\nconst ShapeTitle = styled(Title)`\n  margin-bottom: 8px !important;\n  font-size: 18px !important;\n  color: #000000 !important;\n  text-align: center;\n  \n  @media (max-width: 576px) {\n    font-size: 16px !important;\n  }\n`;\n\nconst ShapeDescription = styled(Text)`\n  color: #000000;\n  line-height: 1.6;\n  display: block;\n  margin-bottom: 8px;\n  font-size: 14px;\n  text-align: center;\n  \n  @media (max-width: 576px) {\n    font-size: 12px;\n  }\n`;\n\nconst ActionButton = styled(Button)`\n  min-width: 120px;\n`;\n\nconst BackButton = styled(Button)`\n  min-width: 100px;\n  background-color: #F2F2F7;\n  font-weight: 500;\n  height: 36px;\n  border-radius: 10px;\n  box-shadow: none;\n  border: 1px solid #E5E5EA;\n  color: #000000;\n  \n  &:hover {\n    border-color: #007AFF;\n    color: #007AFF;\n  }\n`;\n\nconst CloseButton = styled(Button)`\n  min-width: 100px;\n  background-color: #F2F2F7;\n  font-weight: 500;\n  height: 36px;\n  border-radius: 10px;\n  box-shadow: none;\n  border: 1px solid #E5E5EA;\n  color: #000000;\n  \n  &:hover {\n    border-color: #FF3B30;\n    color: #FF3B30;\n  }\n`;\n\nconst Navigation = styled.div`  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n`;\n\nconst NavigationButtons = styled.div`\n  display: flex;\n  gap: 12px;\n  flex-wrap: wrap;\n`;\n\nconst ShapeStep: React.FC<ShapeStepProps> = ({ onSelect, onBack, onClose }) => {\n  const shapes = [\n    {\n      id: 'kruglaya',\n      name: 'Круглая',\n      description: 'Классическая круглая форма',\n      image: getAssetPath('images/bags/shapes/kruglaya.jpg')\n    },\n    {\n      id: 'pryamougolnaya',\n      name: 'Прямоугольная',\n      description: 'Удобная прямоугольная форма',\n      image: getAssetPath('images/bags/shapes/pryamougolnaya.jpg'),\n      titleStyle: { whiteSpace: 'nowrap' as const }\n    },\n    {\n      id: 'kvadratnaya',\n      name: 'Квадратная',\n      description: 'Компактная квадратная форма',\n      image: getAssetPath('images/bags/shapes/kvadratnaya.jpg')\n    },\n    {\n      id: 'trapeciya',\n      name: 'Трапеция',\n      description: 'Стильная форма трапеция',\n      image: getAssetPath('images/bags/shapes/trapeciya.jpg')\n    },\n    {\n      id: 'mesyac',\n      name: 'Месяц',\n      description: 'Элегантная форма полумесяца',\n      image: getAssetPath('images/bags/shapes/mesyac.jpg')\n    },\n    {\n      id: 'serdce',\n      name: 'Сердце',\n      description: 'Романтичная форма сердца',\n      image: getAssetPath('images/bags/shapes/serdce.jpg')\n    }\n  ];\n\n  const fallbackImagePath = getAssetPath('images/bag-placeholder.jpg');\n  console.log(\"[ShapeStep] Fallback Image Path:\", fallbackImagePath);\n\n  return (\n    <ContainerWrapper>\n      <Navigation>\n        <Title level={4} style={{ margin: 0, color: '#000000' }}>Выберите форму сумки</Title>\n        <NavigationButtons>\n          <BackButton size=\"large\" onClick={onBack}>\n            Назад\n          </BackButton>\n        </NavigationButtons>\n      </Navigation>\n      \n      <ShapeGrid>\n        {shapes.map((shape) => (\n          <ShapeCard\n            key={shape.id}\n            hoverable\n            onClick={() => onSelect(shape.name)}\n          >\n            <ImageContainer>\n              <img \n                src={shape.image} \n                alt={shape.name} \n                onError={(e) => { \n                  // Попытка загрузить fallback изображение при ошибке\n                  (e.target as HTMLImageElement).onerror = null; // Предотвращаем бесконечный цикл onError\n                  (e.target as HTMLImageElement).src = fallbackImagePath; \n                  console.log(`[ShapeStep] Error loading ${shape.image}, trying fallback ${fallbackImagePath}`);\n                }}\n              />\n            </ImageContainer>\n            <CardContent>\n              <ShapeTitle level={5} style={shape.titleStyle}>{shape.name}</ShapeTitle>\n              <ShapeDescription>{shape.description}</ShapeDescription>\n            </CardContent>\n          </ShapeCard>\n        ))}\n      </ShapeGrid>\n    </ContainerWrapper>\n  );\n};\n\nexport default ShapeStep; \n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,IAAI,CAAEC,UAAU,CAAEC,MAAM,KAAQ,gBAAgB,CACzD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,YAAY,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAGxC,KAAM,CAAEC,KAAK,CAAEC,IAAK,CAAC,CAAGT,UAAU,CAOlC,KAAM,CAAAU,gBAAgB,CAAGR,MAAM,CAACS,GAAG;AACnC;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,SAAS,CAAGV,MAAM,CAACS,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,SAAS,CAAGX,MAAM,CAACH,IAAI,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAe,cAAc,CAAGZ,MAAM,CAACS,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAI,WAAW,CAAGb,MAAM,CAACS,GAAG;AAC9B;AACA;AACA,CAAC,CAED,KAAM,CAAAK,UAAU,CAAGd,MAAM,CAACM,KAAK,CAAC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAS,gBAAgB,CAAGf,MAAM,CAACO,IAAI,CAAC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAS,YAAY,CAAGhB,MAAM,CAACD,MAAM,CAAC;AACnC;AACA,CAAC,CAED,KAAM,CAAAkB,UAAU,CAAGjB,MAAM,CAACD,MAAM,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
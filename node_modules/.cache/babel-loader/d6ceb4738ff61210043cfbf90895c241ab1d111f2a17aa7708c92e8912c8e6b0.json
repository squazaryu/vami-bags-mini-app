{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHexFormat = exports.getHex = exports.AggregationColor = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _colorPicker = require(\"@rc-component/color-picker\");\nconst toHexFormat = (value, alpha) => (value === null || value === void 0 ? void 0 : value.replace(/[^\\w/]/g, '').slice(0, alpha ? 8 : 6)) || '';\nexports.toHexFormat = toHexFormat;\nconst getHex = (value, alpha) => value ? toHexFormat(value, alpha) : '';\nexports.getHex = getHex;\nlet AggregationColor = exports.AggregationColor = /*#__PURE__*/function () {\n  function AggregationColor(color) {\n    (0, _classCallCheck2.default)(this, AggregationColor);\n    var _a;\n    this.cleared = false;\n    // Clone from another AggregationColor\n    if (color instanceof AggregationColor) {\n      this.metaColor = color.metaColor.clone();\n      this.colors = (_a = color.colors) === null || _a === void 0 ? void 0 : _a.map(info => ({\n        color: new AggregationColor(info.color),\n        percent: info.percent\n      }));\n      this.cleared = color.cleared;\n      return;\n    }\n    const isArray = Array.isArray(color);\n    if (isArray && color.length) {\n      this.colors = color.map(_ref => {\n        let {\n          color: c,\n          percent\n        } = _ref;\n        return {\n          color: new AggregationColor(c),\n          percent\n        };\n      });\n      this.metaColor = new _colorPicker.Color(this.colors[0].color.metaColor);\n    } else {\n      this.metaColor = new _colorPicker.Color(isArray ? '' : color);\n    }\n    if (!color || isArray && !this.colors) {\n      this.metaColor = this.metaColor.setA(0);\n      this.cleared = true;\n    }\n  }\n  return (0, _createClass2.default)(AggregationColor, [{\n    key: \"toHsb\",\n    value: function toHsb() {\n      return this.metaColor.toHsb();\n    }\n  }, {\n    key: \"toHsbString\",\n    value: function toHsbString() {\n      return this.metaColor.toHsbString();\n    }\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return getHex(this.toHexString(), this.metaColor.a < 1);\n    }\n  }, {\n    key: \"toHexString\",\n    value: function toHexString() {\n      return this.metaColor.toHexString();\n    }\n  }, {\n    key: \"toRgb\",\n    value: function toRgb() {\n      return this.metaColor.toRgb();\n    }\n  }, {\n    key: \"toRgbString\",\n    value: function toRgbString() {\n      return this.metaColor.toRgbString();\n    }\n  }, {\n    key: \"isGradient\",\n    value: function isGradient() {\n      return !!this.colors && !this.cleared;\n    }\n  }, {\n    key: \"getColors\",\n    value: function getColors() {\n      return this.colors || [{\n        color: this,\n        percent: 0\n      }];\n    }\n  }, {\n    key: \"toCssString\",\n    value: function toCssString() {\n      const {\n        colors\n      } = this;\n      // CSS line-gradient\n      if (colors) {\n        const colorsStr = colors.map(c => `${c.color.toRgbString()} ${c.percent}%`).join(', ');\n        return `linear-gradient(90deg, ${colorsStr})`;\n      }\n      return this.metaColor.toRgbString();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(color) {\n      if (!color || this.isGradient() !== color.isGradient()) {\n        return false;\n      }\n      if (!this.isGradient()) {\n        return this.toHexString() === color.toHexString();\n      }\n      return this.colors.length === color.colors.length && this.colors.every((c, i) => {\n        const target = color.colors[i];\n        return c.percent === target.percent && c.color.equals(target.color);\n      });\n    }\n  }]);\n}();","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","toHexFormat","getHex","AggregationColor","_classCallCheck2","_createClass2","_colorPicker","alpha","replace","slice","color","_a","cleared","metaColor","clone","colors","map","info","percent","isArray","Array","length","_ref","c","Color","setA","key","toHsb","toHsbString","toHex","toHexString","a","toRgb","toRgbString","isGradient","getColors","toCssString","colorsStr","join","equals","every","i","target"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/color-picker/color.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toHexFormat = exports.getHex = exports.AggregationColor = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _colorPicker = require(\"@rc-component/color-picker\");\nconst toHexFormat = (value, alpha) => (value === null || value === void 0 ? void 0 : value.replace(/[^\\w/]/g, '').slice(0, alpha ? 8 : 6)) || '';\nexports.toHexFormat = toHexFormat;\nconst getHex = (value, alpha) => value ? toHexFormat(value, alpha) : '';\nexports.getHex = getHex;\nlet AggregationColor = exports.AggregationColor = /*#__PURE__*/function () {\n  function AggregationColor(color) {\n    (0, _classCallCheck2.default)(this, AggregationColor);\n    var _a;\n    this.cleared = false;\n    // Clone from another AggregationColor\n    if (color instanceof AggregationColor) {\n      this.metaColor = color.metaColor.clone();\n      this.colors = (_a = color.colors) === null || _a === void 0 ? void 0 : _a.map(info => ({\n        color: new AggregationColor(info.color),\n        percent: info.percent\n      }));\n      this.cleared = color.cleared;\n      return;\n    }\n    const isArray = Array.isArray(color);\n    if (isArray && color.length) {\n      this.colors = color.map(({\n        color: c,\n        percent\n      }) => ({\n        color: new AggregationColor(c),\n        percent\n      }));\n      this.metaColor = new _colorPicker.Color(this.colors[0].color.metaColor);\n    } else {\n      this.metaColor = new _colorPicker.Color(isArray ? '' : color);\n    }\n    if (!color || isArray && !this.colors) {\n      this.metaColor = this.metaColor.setA(0);\n      this.cleared = true;\n    }\n  }\n  return (0, _createClass2.default)(AggregationColor, [{\n    key: \"toHsb\",\n    value: function toHsb() {\n      return this.metaColor.toHsb();\n    }\n  }, {\n    key: \"toHsbString\",\n    value: function toHsbString() {\n      return this.metaColor.toHsbString();\n    }\n  }, {\n    key: \"toHex\",\n    value: function toHex() {\n      return getHex(this.toHexString(), this.metaColor.a < 1);\n    }\n  }, {\n    key: \"toHexString\",\n    value: function toHexString() {\n      return this.metaColor.toHexString();\n    }\n  }, {\n    key: \"toRgb\",\n    value: function toRgb() {\n      return this.metaColor.toRgb();\n    }\n  }, {\n    key: \"toRgbString\",\n    value: function toRgbString() {\n      return this.metaColor.toRgbString();\n    }\n  }, {\n    key: \"isGradient\",\n    value: function isGradient() {\n      return !!this.colors && !this.cleared;\n    }\n  }, {\n    key: \"getColors\",\n    value: function getColors() {\n      return this.colors || [{\n        color: this,\n        percent: 0\n      }];\n    }\n  }, {\n    key: \"toCssString\",\n    value: function toCssString() {\n      const {\n        colors\n      } = this;\n      // CSS line-gradient\n      if (colors) {\n        const colorsStr = colors.map(c => `${c.color.toRgbString()} ${c.percent}%`).join(', ');\n        return `linear-gradient(90deg, ${colorsStr})`;\n      }\n      return this.metaColor.toRgbString();\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(color) {\n      if (!color || this.isGradient() !== color.isGradient()) {\n        return false;\n      }\n      if (!this.isGradient()) {\n        return this.toHexString() === color.toHexString();\n      }\n      return this.colors.length === color.colors.length && this.colors.every((c, i) => {\n        const target = color.colors[i];\n        return c.percent === target.percent && c.color.equals(target.color);\n      });\n    }\n  }]);\n}();"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
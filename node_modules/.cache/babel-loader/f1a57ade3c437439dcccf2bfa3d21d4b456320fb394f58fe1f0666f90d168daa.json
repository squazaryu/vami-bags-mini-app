{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useRowStyle = exports.useColStyle = exports.prepareRowComponentToken = exports.prepareColComponentToken = exports.getMediaSize = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _internal = require(\"../../theme/internal\");\n// ============================== Row-Shared ==============================\nconst genGridRowStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      minWidth: 0,\n      '&::before, &::after': {\n        display: 'flex'\n      },\n      '&-no-wrap': {\n        flexWrap: 'nowrap'\n      },\n      // The origin of the X-axis\n      '&-start': {\n        justifyContent: 'flex-start'\n      },\n      // The center of the X-axis\n      '&-center': {\n        justifyContent: 'center'\n      },\n      // The opposite of the X-axis\n      '&-end': {\n        justifyContent: 'flex-end'\n      },\n      '&-space-between': {\n        justifyContent: 'space-between'\n      },\n      '&-space-around': {\n        justifyContent: 'space-around'\n      },\n      '&-space-evenly': {\n        justifyContent: 'space-evenly'\n      },\n      // Align at the top\n      '&-top': {\n        alignItems: 'flex-start'\n      },\n      // Align at the center\n      '&-middle': {\n        alignItems: 'center'\n      },\n      '&-bottom': {\n        alignItems: 'flex-end'\n      }\n    }\n  };\n};\n// ============================== Col-Shared ==============================\nconst genGridColStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      position: 'relative',\n      maxWidth: '100%',\n      // Prevent columns from collapsing when empty\n      minHeight: 1\n    }\n  };\n};\nconst genLoopGridColumnsStyle = (token, sizeCls) => {\n  const {\n    prefixCls,\n    componentCls,\n    gridColumns\n  } = token;\n  const gridColumnsStyle = {};\n  for (let i = gridColumns; i >= 0; i--) {\n    if (i === 0) {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = {\n        display: 'none'\n      };\n      gridColumnsStyle[`${componentCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: 0\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: 0\n      };\n    } else {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = [\n      // https://github.com/ant-design/ant-design/issues/44456\n      // Form set `display: flex` on Col which will override `display: block`.\n      // Let's get it from css variable to support override.\n      {\n        ['--ant-display']: 'block',\n        // Fallback to display if variable not support\n        display: 'block'\n      }, {\n        display: 'var(--ant-display)',\n        flex: `0 0 ${i / gridColumns * 100}%`,\n        maxWidth: `${i / gridColumns * 100}%`\n      }];\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: i\n      };\n    }\n  }\n  // Flex CSS Var\n  gridColumnsStyle[`${componentCls}${sizeCls}-flex`] = {\n    flex: `var(--${prefixCls}${sizeCls}-flex)`\n  };\n  return gridColumnsStyle;\n};\nconst genGridStyle = (token, sizeCls) => genLoopGridColumnsStyle(token, sizeCls);\nconst genGridMediaStyle = (token, screenSize, sizeCls) => ({\n  [`@media (min-width: ${(0, _cssinjs.unit)(screenSize)})`]: Object.assign({}, genGridStyle(token, sizeCls))\n});\nconst prepareRowComponentToken = () => ({});\nexports.prepareRowComponentToken = prepareRowComponentToken;\nconst prepareColComponentToken = () => ({});\n// ============================== Export ==============================\nexports.prepareColComponentToken = prepareColComponentToken;\nconst useRowStyle = exports.useRowStyle = (0, _internal.genStyleHooks)('Grid', genGridRowStyle, prepareRowComponentToken);\nconst getMediaSize = token => {\n  const mediaSizesMap = {\n    xs: token.screenXSMin,\n    sm: token.screenSMMin,\n    md: token.screenMDMin,\n    lg: token.screenLGMin,\n    xl: token.screenXLMin,\n    xxl: token.screenXXLMin\n  };\n  return mediaSizesMap;\n};\nexports.getMediaSize = getMediaSize;\nconst useColStyle = exports.useColStyle = (0, _internal.genStyleHooks)('Grid', token => {\n  const gridToken = (0, _internal.mergeToken)(token, {\n    gridColumns: 24 // Row is divided into 24 parts in Grid\n  });\n  const gridMediaSizesMap = getMediaSize(gridToken);\n  delete gridMediaSizesMap.xs;\n  return [genGridColStyle(gridToken), genGridStyle(gridToken, ''), genGridStyle(gridToken, '-xs'), Object.keys(gridMediaSizesMap).map(key => genGridMediaStyle(gridToken, gridMediaSizesMap[key], `-${key}`)).reduce((pre, cur) => Object.assign(Object.assign({}, pre), cur), {})];\n}, prepareColComponentToken);","map":{"version":3,"names":["Object","defineProperty","exports","value","useRowStyle","useColStyle","prepareRowComponentToken","prepareColComponentToken","getMediaSize","_cssinjs","require","_internal","genGridRowStyle","token","componentCls","display","flexFlow","minWidth","flexWrap","justifyContent","alignItems","genGridColStyle","position","maxWidth","minHeight","genLoopGridColumnsStyle","sizeCls","prefixCls","gridColumns","gridColumnsStyle","i","insetInlineStart","insetInlineEnd","marginInlineStart","order","flex","genGridStyle","genGridMediaStyle","screenSize","unit","assign","genStyleHooks","mediaSizesMap","xs","screenXSMin","sm","screenSMMin","md","screenMDMin","lg","screenLGMin","xl","screenXLMin","xxl","screenXXLMin","gridToken","mergeToken","gridMediaSizesMap","keys","map","key","reduce","pre","cur"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/grid/style/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useRowStyle = exports.useColStyle = exports.prepareRowComponentToken = exports.prepareColComponentToken = exports.getMediaSize = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _internal = require(\"../../theme/internal\");\n// ============================== Row-Shared ==============================\nconst genGridRowStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      minWidth: 0,\n      '&::before, &::after': {\n        display: 'flex'\n      },\n      '&-no-wrap': {\n        flexWrap: 'nowrap'\n      },\n      // The origin of the X-axis\n      '&-start': {\n        justifyContent: 'flex-start'\n      },\n      // The center of the X-axis\n      '&-center': {\n        justifyContent: 'center'\n      },\n      // The opposite of the X-axis\n      '&-end': {\n        justifyContent: 'flex-end'\n      },\n      '&-space-between': {\n        justifyContent: 'space-between'\n      },\n      '&-space-around': {\n        justifyContent: 'space-around'\n      },\n      '&-space-evenly': {\n        justifyContent: 'space-evenly'\n      },\n      // Align at the top\n      '&-top': {\n        alignItems: 'flex-start'\n      },\n      // Align at the center\n      '&-middle': {\n        alignItems: 'center'\n      },\n      '&-bottom': {\n        alignItems: 'flex-end'\n      }\n    }\n  };\n};\n// ============================== Col-Shared ==============================\nconst genGridColStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      position: 'relative',\n      maxWidth: '100%',\n      // Prevent columns from collapsing when empty\n      minHeight: 1\n    }\n  };\n};\nconst genLoopGridColumnsStyle = (token, sizeCls) => {\n  const {\n    prefixCls,\n    componentCls,\n    gridColumns\n  } = token;\n  const gridColumnsStyle = {};\n  for (let i = gridColumns; i >= 0; i--) {\n    if (i === 0) {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = {\n        display: 'none'\n      };\n      gridColumnsStyle[`${componentCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: 0\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: 0\n      };\n    } else {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = [\n      // https://github.com/ant-design/ant-design/issues/44456\n      // Form set `display: flex` on Col which will override `display: block`.\n      // Let's get it from css variable to support override.\n      {\n        ['--ant-display']: 'block',\n        // Fallback to display if variable not support\n        display: 'block'\n      }, {\n        display: 'var(--ant-display)',\n        flex: `0 0 ${i / gridColumns * 100}%`,\n        maxWidth: `${i / gridColumns * 100}%`\n      }];\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: i\n      };\n    }\n  }\n  // Flex CSS Var\n  gridColumnsStyle[`${componentCls}${sizeCls}-flex`] = {\n    flex: `var(--${prefixCls}${sizeCls}-flex)`\n  };\n  return gridColumnsStyle;\n};\nconst genGridStyle = (token, sizeCls) => genLoopGridColumnsStyle(token, sizeCls);\nconst genGridMediaStyle = (token, screenSize, sizeCls) => ({\n  [`@media (min-width: ${(0, _cssinjs.unit)(screenSize)})`]: Object.assign({}, genGridStyle(token, sizeCls))\n});\nconst prepareRowComponentToken = () => ({});\nexports.prepareRowComponentToken = prepareRowComponentToken;\nconst prepareColComponentToken = () => ({});\n// ============================== Export ==============================\nexports.prepareColComponentToken = prepareColComponentToken;\nconst useRowStyle = exports.useRowStyle = (0, _internal.genStyleHooks)('Grid', genGridRowStyle, prepareRowComponentToken);\nconst getMediaSize = token => {\n  const mediaSizesMap = {\n    xs: token.screenXSMin,\n    sm: token.screenSMMin,\n    md: token.screenMDMin,\n    lg: token.screenLGMin,\n    xl: token.screenXLMin,\n    xxl: token.screenXXLMin\n  };\n  return mediaSizesMap;\n};\nexports.getMediaSize = getMediaSize;\nconst useColStyle = exports.useColStyle = (0, _internal.genStyleHooks)('Grid', token => {\n  const gridToken = (0, _internal.mergeToken)(token, {\n    gridColumns: 24 // Row is divided into 24 parts in Grid\n  });\n  const gridMediaSizesMap = getMediaSize(gridToken);\n  delete gridMediaSizesMap.xs;\n  return [genGridColStyle(gridToken), genGridStyle(gridToken, ''), genGridStyle(gridToken, '-xs'), Object.keys(gridMediaSizesMap).map(key => genGridMediaStyle(gridToken, gridMediaSizesMap[key], `-${key}`)).reduce((pre, cur) => Object.assign(Object.assign({}, pre), cur), {})];\n}, prepareColComponentToken);"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAGF,OAAO,CAACG,WAAW,GAAGH,OAAO,CAACI,wBAAwB,GAAGJ,OAAO,CAACK,wBAAwB,GAAGL,OAAO,CAACM,YAAY,GAAG,KAAK,CAAC;AAC/I,IAAIC,QAAQ,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AAC7C,IAAIC,SAAS,GAAGD,OAAO,CAAC,sBAAsB,CAAC;AAC/C;AACA,MAAME,eAAe,GAAGC,KAAK,IAAI;EAC/B,MAAM;IACJC;EACF,CAAC,GAAGD,KAAK;EACT,OAAO;IACL;IACA,CAACC,YAAY,GAAG;MACdC,OAAO,EAAE,MAAM;MACfC,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,CAAC;MACX,qBAAqB,EAAE;QACrBF,OAAO,EAAE;MACX,CAAC;MACD,WAAW,EAAE;QACXG,QAAQ,EAAE;MACZ,CAAC;MACD;MACA,SAAS,EAAE;QACTC,cAAc,EAAE;MAClB,CAAC;MACD;MACA,UAAU,EAAE;QACVA,cAAc,EAAE;MAClB,CAAC;MACD;MACA,OAAO,EAAE;QACPA,cAAc,EAAE;MAClB,CAAC;MACD,iBAAiB,EAAE;QACjBA,cAAc,EAAE;MAClB,CAAC;MACD,gBAAgB,EAAE;QAChBA,cAAc,EAAE;MAClB,CAAC;MACD,gBAAgB,EAAE;QAChBA,cAAc,EAAE;MAClB,CAAC;MACD;MACA,OAAO,EAAE;QACPC,UAAU,EAAE;MACd,CAAC;MACD;MACA,UAAU,EAAE;QACVA,UAAU,EAAE;MACd,CAAC;MACD,UAAU,EAAE;QACVA,UAAU,EAAE;MACd;IACF;EACF,CAAC;AACH,CAAC;AACD;AACA,MAAMC,eAAe,GAAGR,KAAK,IAAI;EAC/B,MAAM;IACJC;EACF,CAAC,GAAGD,KAAK;EACT,OAAO;IACL;IACA,CAACC,YAAY,GAAG;MACdQ,QAAQ,EAAE,UAAU;MACpBC,QAAQ,EAAE,MAAM;MAChB;MACAC,SAAS,EAAE;IACb;EACF,CAAC;AACH,CAAC;AACD,MAAMC,uBAAuB,GAAGA,CAACZ,KAAK,EAAEa,OAAO,KAAK;EAClD,MAAM;IACJC,SAAS;IACTb,YAAY;IACZc;EACF,CAAC,GAAGf,KAAK;EACT,MAAMgB,gBAAgB,GAAG,CAAC,CAAC;EAC3B,KAAK,IAAIC,CAAC,GAAGF,WAAW,EAAEE,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE;IACrC,IAAIA,CAAC,KAAK,CAAC,EAAE;MACXD,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,IAAII,CAAC,EAAE,CAAC,GAAG;QACnDf,OAAO,EAAE;MACX,CAAC;MACDc,gBAAgB,CAAC,GAAGf,YAAY,SAASgB,CAAC,EAAE,CAAC,GAAG;QAC9CC,gBAAgB,EAAE;MACpB,CAAC;MACDF,gBAAgB,CAAC,GAAGf,YAAY,SAASgB,CAAC,EAAE,CAAC,GAAG;QAC9CE,cAAc,EAAE;MAClB,CAAC;MACDH,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,SAASI,CAAC,EAAE,CAAC,GAAG;QACxDC,gBAAgB,EAAE;MACpB,CAAC;MACDF,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,SAASI,CAAC,EAAE,CAAC,GAAG;QACxDE,cAAc,EAAE;MAClB,CAAC;MACDH,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,WAAWI,CAAC,EAAE,CAAC,GAAG;QAC1DG,iBAAiB,EAAE;MACrB,CAAC;MACDJ,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,UAAUI,CAAC,EAAE,CAAC,GAAG;QACzDI,KAAK,EAAE;MACT,CAAC;IACH,CAAC,MAAM;MACLL,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,IAAII,CAAC,EAAE,CAAC,GAAG;MACrD;MACA;MACA;MACA;QACE,CAAC,eAAe,GAAG,OAAO;QAC1B;QACAf,OAAO,EAAE;MACX,CAAC,EAAE;QACDA,OAAO,EAAE,oBAAoB;QAC7BoB,IAAI,EAAE,OAAOL,CAAC,GAAGF,WAAW,GAAG,GAAG,GAAG;QACrCL,QAAQ,EAAE,GAAGO,CAAC,GAAGF,WAAW,GAAG,GAAG;MACpC,CAAC,CAAC;MACFC,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,SAASI,CAAC,EAAE,CAAC,GAAG;QACxDC,gBAAgB,EAAE,GAAGD,CAAC,GAAGF,WAAW,GAAG,GAAG;MAC5C,CAAC;MACDC,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,SAASI,CAAC,EAAE,CAAC,GAAG;QACxDE,cAAc,EAAE,GAAGF,CAAC,GAAGF,WAAW,GAAG,GAAG;MAC1C,CAAC;MACDC,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,WAAWI,CAAC,EAAE,CAAC,GAAG;QAC1DG,iBAAiB,EAAE,GAAGH,CAAC,GAAGF,WAAW,GAAG,GAAG;MAC7C,CAAC;MACDC,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,UAAUI,CAAC,EAAE,CAAC,GAAG;QACzDI,KAAK,EAAEJ;MACT,CAAC;IACH;EACF;EACA;EACAD,gBAAgB,CAAC,GAAGf,YAAY,GAAGY,OAAO,OAAO,CAAC,GAAG;IACnDS,IAAI,EAAE,SAASR,SAAS,GAAGD,OAAO;EACpC,CAAC;EACD,OAAOG,gBAAgB;AACzB,CAAC;AACD,MAAMO,YAAY,GAAGA,CAACvB,KAAK,EAAEa,OAAO,KAAKD,uBAAuB,CAACZ,KAAK,EAAEa,OAAO,CAAC;AAChF,MAAMW,iBAAiB,GAAGA,CAACxB,KAAK,EAAEyB,UAAU,EAAEZ,OAAO,MAAM;EACzD,CAAC,sBAAsB,CAAC,CAAC,EAAEjB,QAAQ,CAAC8B,IAAI,EAAED,UAAU,CAAC,GAAG,GAAGtC,MAAM,CAACwC,MAAM,CAAC,CAAC,CAAC,EAAEJ,YAAY,CAACvB,KAAK,EAAEa,OAAO,CAAC;AAC3G,CAAC,CAAC;AACF,MAAMpB,wBAAwB,GAAGA,CAAA,MAAO,CAAC,CAAC,CAAC;AAC3CJ,OAAO,CAACI,wBAAwB,GAAGA,wBAAwB;AAC3D,MAAMC,wBAAwB,GAAGA,CAAA,MAAO,CAAC,CAAC,CAAC;AAC3C;AACAL,OAAO,CAACK,wBAAwB,GAAGA,wBAAwB;AAC3D,MAAMH,WAAW,GAAGF,OAAO,CAACE,WAAW,GAAG,CAAC,CAAC,EAAEO,SAAS,CAAC8B,aAAa,EAAE,MAAM,EAAE7B,eAAe,EAAEN,wBAAwB,CAAC;AACzH,MAAME,YAAY,GAAGK,KAAK,IAAI;EAC5B,MAAM6B,aAAa,GAAG;IACpBC,EAAE,EAAE9B,KAAK,CAAC+B,WAAW;IACrBC,EAAE,EAAEhC,KAAK,CAACiC,WAAW;IACrBC,EAAE,EAAElC,KAAK,CAACmC,WAAW;IACrBC,EAAE,EAAEpC,KAAK,CAACqC,WAAW;IACrBC,EAAE,EAAEtC,KAAK,CAACuC,WAAW;IACrBC,GAAG,EAAExC,KAAK,CAACyC;EACb,CAAC;EACD,OAAOZ,aAAa;AACtB,CAAC;AACDxC,OAAO,CAACM,YAAY,GAAGA,YAAY;AACnC,MAAMH,WAAW,GAAGH,OAAO,CAACG,WAAW,GAAG,CAAC,CAAC,EAAEM,SAAS,CAAC8B,aAAa,EAAE,MAAM,EAAE5B,KAAK,IAAI;EACtF,MAAM0C,SAAS,GAAG,CAAC,CAAC,EAAE5C,SAAS,CAAC6C,UAAU,EAAE3C,KAAK,EAAE;IACjDe,WAAW,EAAE,EAAE,CAAC;EAClB,CAAC,CAAC;EACF,MAAM6B,iBAAiB,GAAGjD,YAAY,CAAC+C,SAAS,CAAC;EACjD,OAAOE,iBAAiB,CAACd,EAAE;EAC3B,OAAO,CAACtB,eAAe,CAACkC,SAAS,CAAC,EAAEnB,YAAY,CAACmB,SAAS,EAAE,EAAE,CAAC,EAAEnB,YAAY,CAACmB,SAAS,EAAE,KAAK,CAAC,EAAEvD,MAAM,CAAC0D,IAAI,CAACD,iBAAiB,CAAC,CAACE,GAAG,CAACC,GAAG,IAAIvB,iBAAiB,CAACkB,SAAS,EAAEE,iBAAiB,CAACG,GAAG,CAAC,EAAE,IAAIA,GAAG,EAAE,CAAC,CAAC,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK/D,MAAM,CAACwC,MAAM,CAACxC,MAAM,CAACwC,MAAM,CAAC,CAAC,CAAC,EAAEsB,GAAG,CAAC,EAAEC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnR,CAAC,EAAExD,wBAAwB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
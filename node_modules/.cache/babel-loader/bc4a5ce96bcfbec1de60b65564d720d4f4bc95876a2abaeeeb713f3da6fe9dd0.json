{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._ButtonVariantTypes = exports._ButtonColorTypes = void 0;\nexports.convertLegacyProps = convertLegacyProps;\nexports.isString = isString;\nexports.isTwoCNChar = void 0;\nexports.isUnBorderedButtonVariant = isUnBorderedButtonVariant;\nexports.spaceChildren = spaceChildren;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNode = require(\"../_util/reactNode\");\nvar _interface = require(\"../theme/interface\");\nconst rxTwoCNChar = /^[\\u4E00-\\u9FA5]{2}$/;\nconst isTwoCNChar = exports.isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nfunction convertLegacyProps(type) {\n  if (type === 'danger') {\n    return {\n      danger: true\n    };\n  }\n  return {\n    type\n  };\n}\nfunction isString(str) {\n  return typeof str === 'string';\n}\nfunction isUnBorderedButtonVariant(type) {\n  return type === 'text' || type === 'link';\n}\nfunction splitCNCharsBySpace(child, needInserted) {\n  if (child === null || child === undefined) {\n    return;\n  }\n  const SPACE = needInserted ? ' ' : '';\n  if (typeof child !== 'string' && typeof child !== 'number' && isString(child.type) && isTwoCNChar(child.props.children)) {\n    return (0, _reactNode.cloneElement)(child, {\n      children: child.props.children.split('').join(SPACE)\n    });\n  }\n  if (isString(child)) {\n    return isTwoCNChar(child) ? /*#__PURE__*/_react.default.createElement(\"span\", null, child.split('').join(SPACE)) : /*#__PURE__*/_react.default.createElement(\"span\", null, child);\n  }\n  if ((0, _reactNode.isFragment)(child)) {\n    return /*#__PURE__*/_react.default.createElement(\"span\", null, child);\n  }\n  return child;\n}\nfunction spaceChildren(children, needInserted) {\n  let isPrevChildPure = false;\n  const childList = [];\n  _react.default.Children.forEach(children, child => {\n    const type = typeof child;\n    const isCurrentChildPure = type === 'string' || type === 'number';\n    if (isPrevChildPure && isCurrentChildPure) {\n      const lastIndex = childList.length - 1;\n      const lastChild = childList[lastIndex];\n      childList[lastIndex] = `${lastChild}${child}`;\n    } else {\n      childList.push(child);\n    }\n    isPrevChildPure = isCurrentChildPure;\n  });\n  return _react.default.Children.map(childList, child => splitCNCharsBySpace(child, needInserted));\n}\nconst _ButtonTypes = ['default', 'primary', 'dashed', 'link', 'text'];\nconst _ButtonShapes = ['default', 'circle', 'round'];\nconst _ButtonHTMLTypes = ['submit', 'button', 'reset'];\nconst _ButtonVariantTypes = exports._ButtonVariantTypes = ['outlined', 'dashed', 'solid', 'filled', 'text', 'link'];\nconst _ButtonColorTypes = exports._ButtonColorTypes = ['default', 'primary', 'danger'].concat((0, _toConsumableArray2.default)(_interface.PresetColors));","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","_ButtonVariantTypes","_ButtonColorTypes","convertLegacyProps","isString","isTwoCNChar","isUnBorderedButtonVariant","spaceChildren","_toConsumableArray2","_react","_reactNode","_interface","rxTwoCNChar","test","bind","type","danger","str","splitCNCharsBySpace","child","needInserted","undefined","SPACE","props","children","cloneElement","split","join","createElement","isFragment","isPrevChildPure","childList","Children","forEach","isCurrentChildPure","lastIndex","length","lastChild","push","map","_ButtonTypes","_ButtonShapes","_ButtonHTMLTypes","concat","PresetColors"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/button/buttonHelpers.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._ButtonVariantTypes = exports._ButtonColorTypes = void 0;\nexports.convertLegacyProps = convertLegacyProps;\nexports.isString = isString;\nexports.isTwoCNChar = void 0;\nexports.isUnBorderedButtonVariant = isUnBorderedButtonVariant;\nexports.spaceChildren = spaceChildren;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNode = require(\"../_util/reactNode\");\nvar _interface = require(\"../theme/interface\");\nconst rxTwoCNChar = /^[\\u4E00-\\u9FA5]{2}$/;\nconst isTwoCNChar = exports.isTwoCNChar = rxTwoCNChar.test.bind(rxTwoCNChar);\nfunction convertLegacyProps(type) {\n  if (type === 'danger') {\n    return {\n      danger: true\n    };\n  }\n  return {\n    type\n  };\n}\nfunction isString(str) {\n  return typeof str === 'string';\n}\nfunction isUnBorderedButtonVariant(type) {\n  return type === 'text' || type === 'link';\n}\nfunction splitCNCharsBySpace(child, needInserted) {\n  if (child === null || child === undefined) {\n    return;\n  }\n  const SPACE = needInserted ? ' ' : '';\n  if (typeof child !== 'string' && typeof child !== 'number' && isString(child.type) && isTwoCNChar(child.props.children)) {\n    return (0, _reactNode.cloneElement)(child, {\n      children: child.props.children.split('').join(SPACE)\n    });\n  }\n  if (isString(child)) {\n    return isTwoCNChar(child) ? /*#__PURE__*/_react.default.createElement(\"span\", null, child.split('').join(SPACE)) : /*#__PURE__*/_react.default.createElement(\"span\", null, child);\n  }\n  if ((0, _reactNode.isFragment)(child)) {\n    return /*#__PURE__*/_react.default.createElement(\"span\", null, child);\n  }\n  return child;\n}\nfunction spaceChildren(children, needInserted) {\n  let isPrevChildPure = false;\n  const childList = [];\n  _react.default.Children.forEach(children, child => {\n    const type = typeof child;\n    const isCurrentChildPure = type === 'string' || type === 'number';\n    if (isPrevChildPure && isCurrentChildPure) {\n      const lastIndex = childList.length - 1;\n      const lastChild = childList[lastIndex];\n      childList[lastIndex] = `${lastChild}${child}`;\n    } else {\n      childList.push(child);\n    }\n    isPrevChildPure = isCurrentChildPure;\n  });\n  return _react.default.Children.map(childList, child => splitCNCharsBySpace(child, needInserted));\n}\nconst _ButtonTypes = ['default', 'primary', 'dashed', 'link', 'text'];\nconst _ButtonShapes = ['default', 'circle', 'round'];\nconst _ButtonHTMLTypes = ['submit', 'button', 'reset'];\nconst _ButtonVariantTypes = exports._ButtonVariantTypes = ['outlined', 'dashed', 'solid', 'filled', 'text', 'link'];\nconst _ButtonColorTypes = exports._ButtonColorTypes = ['default', 'primary', 'danger'].concat((0, _toConsumableArray2.default)(_interface.PresetColors));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\"use client\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _EditOutlined = _interopRequireDefault(require(\"@ant-design/icons/EditOutlined\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcResizeObserver = _interopRequireDefault(require(\"rc-resize-observer\"));\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\nvar _useLayoutEffect = _interopRequireDefault(require(\"rc-util/lib/hooks/useLayoutEffect\"));\nvar _useMergedState = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _omit = _interopRequireDefault(require(\"rc-util/lib/omit\"));\nvar _ref = require(\"rc-util/lib/ref\");\nvar _styleChecker = require(\"../../_util/styleChecker\");\nvar _configProvider = require(\"../../config-provider\");\nvar _useLocale = _interopRequireDefault(require(\"../../locale/useLocale\"));\nvar _tooltip = _interopRequireDefault(require(\"../../tooltip\"));\nvar _Editable = _interopRequireDefault(require(\"../Editable\"));\nvar _useCopyClick = _interopRequireDefault(require(\"../hooks/useCopyClick\"));\nvar _useMergedConfig = _interopRequireDefault(require(\"../hooks/useMergedConfig\"));\nvar _usePrevious = _interopRequireDefault(require(\"../hooks/usePrevious\"));\nvar _useTooltipProps = _interopRequireDefault(require(\"../hooks/useTooltipProps\"));\nvar _Typography = _interopRequireDefault(require(\"../Typography\"));\nvar _CopyBtn = _interopRequireDefault(require(\"./CopyBtn\"));\nvar _Ellipsis = _interopRequireDefault(require(\"./Ellipsis\"));\nvar _EllipsisTooltip = _interopRequireDefault(require(\"./EllipsisTooltip\"));\nvar _util = require(\"./util\");\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nfunction wrapperDecorations(_ref2, content) {\n  let {\n    mark,\n    code,\n    underline,\n    delete: del,\n    strong,\n    keyboard,\n    italic\n  } = _ref2;\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nconst ELLIPSIS_STR = '...';\nconst DECORATION_PROPS = ['delete', 'mark', 'code', 'underline', 'strong', 'keyboard', 'italic'];\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(_configProvider.ConfigContext);\n  const [textLocale] = (0, _useLocale.default)('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = (0, _omit.default)(restProps, DECORATION_PROPS);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = (0, _useMergedConfig.default)(editable);\n  const [editing, setEditing] = (0, _useMergedState.default)(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  const prevEditing = (0, _usePrevious.default)(editing);\n  (0, _useLayoutEffect.default)(() => {\n    var _a;\n    if (!editing && prevEditing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = (0, _useMergedConfig.default)(copyable);\n  const {\n    copied,\n    copyLoading,\n    onClick: onCopyClick\n  } = (0, _useCopyClick.default)({\n    copyConfig,\n    children\n  });\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = (0, _useMergedConfig.default)(ellipsis, {\n    expandable: false,\n    symbol: isExpanded => isExpanded ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n  });\n  const [expanded, setExpanded] = (0, _useMergedState.default)(ellipsisConfig.defaultExpanded || false, {\n    value: ellipsisConfig.expanded\n  });\n  const mergedEnableEllipsis = enableEllipsis && (!expanded || ellipsisConfig.expandable === 'collapsible');\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  mergedEnableEllipsis && (\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy), [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  (0, _useLayoutEffect.default)(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport((0, _styleChecker.isStyleSupport)('webkitLineClamp'));\n      setIsTextOverflowSupport((0, _styleChecker.isStyleSupport)('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const [cssEllipsis, setCssEllipsis] = React.useState(mergedEnableEllipsis);\n  const canUseCssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  // We use effect to change from css ellipsis to js ellipsis.\n  // To make SSR still can see the ellipsis.\n  (0, _useLayoutEffect.default)(() => {\n    setCssEllipsis(canUseCssEllipsis && mergedEnableEllipsis);\n  }, [canUseCssEllipsis, mergedEnableEllipsis]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = (e, info) => {\n    var _a;\n    setExpanded(info.expanded);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e, info);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const onResize = _ref3 => {\n    let {\n      offsetWidth\n    } = _ref3;\n    setEllipsisWidth(offsetWidth);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = (0, _util.isEleEllipsis)(textEle);\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  const tooltipProps = (0, _useTooltipProps.default)(ellipsisConfig.tooltip, editConfig.text, children);\n  const topAriaLabel = React.useMemo(() => {\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    return [editConfig.text, children, title, tooltipProps.title].find(_util.isValidText);\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(_Editable.default, {\n      value: (_a = editConfig.text) !== null && _a !== void 0 ? _a : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    return expandable ? (/*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: \"expand\",\n      className: `${prefixCls}-${expanded ? 'collapse' : 'expand'}`,\n      onClick: e => onExpandClick(e, {\n        expanded: !expanded\n      }),\n      \"aria-label\": expanded ? textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, typeof symbol === 'function' ? symbol(expanded) : symbol)) : null;\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) {\n      return;\n    }\n    const {\n      icon,\n      tooltip,\n      tabIndex\n    } = editConfig;\n    const editTitle = (0, _toArray.default)(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? (/*#__PURE__*/React.createElement(_tooltip.default, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel,\n      tabIndex: tabIndex\n    }, icon || /*#__PURE__*/React.createElement(_EditOutlined.default, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(_CopyBtn.default, Object.assign({\n      key: \"copy\"\n    }, copyConfig, {\n      prefixCls: prefixCls,\n      copied: copied,\n      locale: textLocale,\n      onCopy: onCopyClick,\n      loading: copyLoading,\n      iconOnly: children === null || children === undefined\n    }));\n  };\n  const renderOperations = canEllipsis => [canEllipsis && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = canEllipsis => [canEllipsis && !expanded && (/*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(canEllipsis)];\n  return /*#__PURE__*/React.createElement(_rcResizeObserver.default, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, resizeRef => (/*#__PURE__*/React.createElement(_EllipsisTooltip.default, {\n    tooltipProps: tooltipProps,\n    enableEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(_Typography.default, Object.assign({\n    className: (0, _classnames.default)({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: (0, _ref.composeRef)(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(_Ellipsis.default, {\n    enableMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    onEllipsis: onJsEllipsis,\n    expanded: expanded,\n    miscDeps: [copied, expanded, copyLoading, enableEdit, enableCopy, textLocale].concat((0, _toConsumableArray2.default)(DECORATION_PROPS.map(key => props[key])))\n  }, (node, canEllipsis) => wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, node.length > 0 && canEllipsis && !expanded && topAriaLabel ? (/*#__PURE__*/React.createElement(\"span\", {\n    key: \"show-content\",\n    \"aria-hidden\": true\n  }, node)) : node, renderEllipsis(canEllipsis))))))));\n});\nvar _default = exports.default = Base;","map":{"version":3,"names":["_interopRequireWildcard","require","default","_interopRequireDefault","Object","defineProperty","exports","value","_toConsumableArray2","React","_EditOutlined","_classnames","_rcResizeObserver","_toArray","_useLayoutEffect","_useMergedState","_omit","_ref","_styleChecker","_configProvider","_useLocale","_tooltip","_Editable","_useCopyClick","_useMergedConfig","_usePrevious","_useTooltipProps","_Typography","_CopyBtn","_Ellipsis","_EllipsisTooltip","_util","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","wrapperDecorations","_ref2","content","mark","code","underline","delete","del","strong","keyboard","italic","currentContent","wrap","tag","needed","createElement","ELLIPSIS_STR","DECORATION_PROPS","Base","forwardRef","props","ref","_a","prefixCls","customizePrefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","getPrefixCls","direction","useContext","ConfigContext","textLocale","typographyRef","useRef","editIconRef","textProps","enableEdit","editConfig","editing","setEditing","triggerType","triggerEdit","edit","onStart","prevEditing","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","enableCopy","copyConfig","copied","copyLoading","onClick","onCopyClick","isLineClampSupport","setIsLineClampSupport","useState","isTextOverflowSupport","setIsTextOverflowSupport","isJsEllipsis","setIsJsEllipsis","isNativeEllipsis","setIsNativeEllipsis","isNativeVisible","setIsNativeVisible","enableEllipsis","ellipsisConfig","expandable","symbol","isExpanded","collapse","expand","expanded","setExpanded","defaultExpanded","mergedEnableEllipsis","rows","needMeasureEllipsis","useMemo","suffix","undefined","onEllipsis","isStyleSupport","cssEllipsis","setCssEllipsis","canUseCssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","info","onExpand","ellipsisWidth","setEllipsisWidth","onResize","_ref3","offsetWidth","onJsEllipsis","jsEllipsis","useEffect","textEle","currentEllipsis","isEleEllipsis","IntersectionObserver","observer","offsetParent","observe","disconnect","tooltipProps","tooltip","text","topAriaLabel","find","isValidText","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","key","renderEdit","icon","tabIndex","editTitle","ariaLabel","includes","role","renderCopy","assign","locale","onCopy","loading","iconOnly","renderOperations","canEllipsis","renderEllipsis","resizeRef","isEllipsis","WebkitLineClamp","composeRef","toString","enableMeasure","width","miscDeps","concat","map","node","Fragment","_default"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/typography/Base/index.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _EditOutlined = _interopRequireDefault(require(\"@ant-design/icons/EditOutlined\"));\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\nvar _rcResizeObserver = _interopRequireDefault(require(\"rc-resize-observer\"));\nvar _toArray = _interopRequireDefault(require(\"rc-util/lib/Children/toArray\"));\nvar _useLayoutEffect = _interopRequireDefault(require(\"rc-util/lib/hooks/useLayoutEffect\"));\nvar _useMergedState = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _omit = _interopRequireDefault(require(\"rc-util/lib/omit\"));\nvar _ref = require(\"rc-util/lib/ref\");\nvar _styleChecker = require(\"../../_util/styleChecker\");\nvar _configProvider = require(\"../../config-provider\");\nvar _useLocale = _interopRequireDefault(require(\"../../locale/useLocale\"));\nvar _tooltip = _interopRequireDefault(require(\"../../tooltip\"));\nvar _Editable = _interopRequireDefault(require(\"../Editable\"));\nvar _useCopyClick = _interopRequireDefault(require(\"../hooks/useCopyClick\"));\nvar _useMergedConfig = _interopRequireDefault(require(\"../hooks/useMergedConfig\"));\nvar _usePrevious = _interopRequireDefault(require(\"../hooks/usePrevious\"));\nvar _useTooltipProps = _interopRequireDefault(require(\"../hooks/useTooltipProps\"));\nvar _Typography = _interopRequireDefault(require(\"../Typography\"));\nvar _CopyBtn = _interopRequireDefault(require(\"./CopyBtn\"));\nvar _Ellipsis = _interopRequireDefault(require(\"./Ellipsis\"));\nvar _EllipsisTooltip = _interopRequireDefault(require(\"./EllipsisTooltip\"));\nvar _util = require(\"./util\");\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nfunction wrapperDecorations({\n  mark,\n  code,\n  underline,\n  delete: del,\n  strong,\n  keyboard,\n  italic\n}, content) {\n  let currentContent = content;\n  function wrap(tag, needed) {\n    if (!needed) {\n      return;\n    }\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n  wrap('strong', strong);\n  wrap('u', underline);\n  wrap('del', del);\n  wrap('code', code);\n  wrap('mark', mark);\n  wrap('kbd', keyboard);\n  wrap('i', italic);\n  return currentContent;\n}\nconst ELLIPSIS_STR = '...';\nconst DECORATION_PROPS = ['delete', 'mark', 'code', 'underline', 'strong', 'keyboard', 'italic'];\nconst Base = /*#__PURE__*/React.forwardRef((props, ref) => {\n  var _a;\n  const {\n      prefixCls: customizePrefixCls,\n      className,\n      style,\n      type,\n      disabled,\n      children,\n      ellipsis,\n      editable,\n      copyable,\n      component,\n      title\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(_configProvider.ConfigContext);\n  const [textLocale] = (0, _useLocale.default)('Text');\n  const typographyRef = React.useRef(null);\n  const editIconRef = React.useRef(null);\n  // ============================ MISC ============================\n  const prefixCls = getPrefixCls('typography', customizePrefixCls);\n  const textProps = (0, _omit.default)(restProps, DECORATION_PROPS);\n  // ========================== Editable ==========================\n  const [enableEdit, editConfig] = (0, _useMergedConfig.default)(editable);\n  const [editing, setEditing] = (0, _useMergedState.default)(false, {\n    value: editConfig.editing\n  });\n  const {\n    triggerType = ['icon']\n  } = editConfig;\n  const triggerEdit = edit => {\n    var _a;\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n    setEditing(edit);\n  };\n  // Focus edit icon when back\n  const prevEditing = (0, _usePrevious.default)(editing);\n  (0, _useLayoutEffect.default)(() => {\n    var _a;\n    if (!editing && prevEditing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n  const onEditClick = e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    triggerEdit(true);\n  };\n  const onEditChange = value => {\n    var _a;\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n  const onEditCancel = () => {\n    var _a;\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  };\n  // ========================== Copyable ==========================\n  const [enableCopy, copyConfig] = (0, _useMergedConfig.default)(copyable);\n  const {\n    copied,\n    copyLoading,\n    onClick: onCopyClick\n  } = (0, _useCopyClick.default)({\n    copyConfig,\n    children\n  });\n  // ========================== Ellipsis ==========================\n  const [isLineClampSupport, setIsLineClampSupport] = React.useState(false);\n  const [isTextOverflowSupport, setIsTextOverflowSupport] = React.useState(false);\n  const [isJsEllipsis, setIsJsEllipsis] = React.useState(false);\n  const [isNativeEllipsis, setIsNativeEllipsis] = React.useState(false);\n  const [isNativeVisible, setIsNativeVisible] = React.useState(true);\n  const [enableEllipsis, ellipsisConfig] = (0, _useMergedConfig.default)(ellipsis, {\n    expandable: false,\n    symbol: isExpanded => isExpanded ? textLocale === null || textLocale === void 0 ? void 0 : textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n  });\n  const [expanded, setExpanded] = (0, _useMergedState.default)(ellipsisConfig.defaultExpanded || false, {\n    value: ellipsisConfig.expanded\n  });\n  const mergedEnableEllipsis = enableEllipsis && (!expanded || ellipsisConfig.expandable === 'collapsible');\n  // Shared prop to reduce bundle size\n  const {\n    rows = 1\n  } = ellipsisConfig;\n  const needMeasureEllipsis = React.useMemo(() =>\n  // Disable ellipsis\n  mergedEnableEllipsis && (\n  // Provide suffix\n  ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis ||\n  // Can't use css ellipsis since we need to provide the place for button\n  ellipsisConfig.expandable || enableEdit || enableCopy), [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  (0, _useLayoutEffect.default)(() => {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport((0, _styleChecker.isStyleSupport)('webkitLineClamp'));\n      setIsTextOverflowSupport((0, _styleChecker.isStyleSupport)('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  const [cssEllipsis, setCssEllipsis] = React.useState(mergedEnableEllipsis);\n  const canUseCssEllipsis = React.useMemo(() => {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  // We use effect to change from css ellipsis to js ellipsis.\n  // To make SSR still can see the ellipsis.\n  (0, _useLayoutEffect.default)(() => {\n    setCssEllipsis(canUseCssEllipsis && mergedEnableEllipsis);\n  }, [canUseCssEllipsis, mergedEnableEllipsis]);\n  const isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  const cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  const cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis;\n  // >>>>> Expand\n  const onExpandClick = (e, info) => {\n    var _a;\n    setExpanded(info.expanded);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e, info);\n  };\n  const [ellipsisWidth, setEllipsisWidth] = React.useState(0);\n  const onResize = ({\n    offsetWidth\n  }) => {\n    setEllipsisWidth(offsetWidth);\n  };\n  // >>>>> JS Ellipsis\n  const onJsEllipsis = jsEllipsis => {\n    var _a;\n    setIsJsEllipsis(jsEllipsis);\n    // Trigger if changed\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  };\n  // >>>>> Native ellipsis\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (enableEllipsis && cssEllipsis && textEle) {\n      const currentEllipsis = (0, _util.isEleEllipsis)(textEle);\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children, cssLineClamp, isNativeVisible, ellipsisWidth]);\n  // https://github.com/ant-design/ant-design/issues/36786\n  // Use IntersectionObserver to check if element is invisible\n  React.useEffect(() => {\n    const textEle = typographyRef.current;\n    if (typeof IntersectionObserver === 'undefined' || !textEle || !cssEllipsis || !mergedEnableEllipsis) {\n      return;\n    }\n    /* eslint-disable-next-line compat/compat */\n    const observer = new IntersectionObserver(() => {\n      setIsNativeVisible(!!textEle.offsetParent);\n    });\n    observer.observe(textEle);\n    return () => {\n      observer.disconnect();\n    };\n  }, [cssEllipsis, mergedEnableEllipsis]);\n  // ========================== Tooltip ===========================\n  const tooltipProps = (0, _useTooltipProps.default)(ellipsisConfig.tooltip, editConfig.text, children);\n  const topAriaLabel = React.useMemo(() => {\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n    return [editConfig.text, children, title, tooltipProps.title].find(_util.isValidText);\n  }, [enableEllipsis, cssEllipsis, title, tooltipProps.title, isMergedEllipsis]);\n  // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n  if (editing) {\n    return /*#__PURE__*/React.createElement(_Editable.default, {\n      value: (_a = editConfig.text) !== null && _a !== void 0 ? _a : typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      component: component,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  }\n  // >>>>>>>>>>> Typography\n  // Expand\n  const renderExpand = () => {\n    const {\n      expandable,\n      symbol\n    } = ellipsisConfig;\n    return expandable ? (/*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      key: \"expand\",\n      className: `${prefixCls}-${expanded ? 'collapse' : 'expand'}`,\n      onClick: e => onExpandClick(e, {\n        expanded: !expanded\n      }),\n      \"aria-label\": expanded ? textLocale.collapse : textLocale === null || textLocale === void 0 ? void 0 : textLocale.expand\n    }, typeof symbol === 'function' ? symbol(expanded) : symbol)) : null;\n  };\n  // Edit\n  const renderEdit = () => {\n    if (!enableEdit) {\n      return;\n    }\n    const {\n      icon,\n      tooltip,\n      tabIndex\n    } = editConfig;\n    const editTitle = (0, _toArray.default)(tooltip)[0] || (textLocale === null || textLocale === void 0 ? void 0 : textLocale.edit);\n    const ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? (/*#__PURE__*/React.createElement(_tooltip.default, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      ref: editIconRef,\n      className: `${prefixCls}-edit`,\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel,\n      tabIndex: tabIndex\n    }, icon || /*#__PURE__*/React.createElement(_EditOutlined.default, {\n      role: \"button\"\n    })))) : null;\n  };\n  // Copy\n  const renderCopy = () => {\n    if (!enableCopy) {\n      return null;\n    }\n    return /*#__PURE__*/React.createElement(_CopyBtn.default, Object.assign({\n      key: \"copy\"\n    }, copyConfig, {\n      prefixCls: prefixCls,\n      copied: copied,\n      locale: textLocale,\n      onCopy: onCopyClick,\n      loading: copyLoading,\n      iconOnly: children === null || children === undefined\n    }));\n  };\n  const renderOperations = canEllipsis => [canEllipsis && renderExpand(), renderEdit(), renderCopy()];\n  const renderEllipsis = canEllipsis => [canEllipsis && !expanded && (/*#__PURE__*/React.createElement(\"span\", {\n    \"aria-hidden\": true,\n    key: \"ellipsis\"\n  }, ELLIPSIS_STR)), ellipsisConfig.suffix, renderOperations(canEllipsis)];\n  return /*#__PURE__*/React.createElement(_rcResizeObserver.default, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis\n  }, resizeRef => (/*#__PURE__*/React.createElement(_EllipsisTooltip.default, {\n    tooltipProps: tooltipProps,\n    enableEllipsis: mergedEnableEllipsis,\n    isEllipsis: isMergedEllipsis\n  }, /*#__PURE__*/React.createElement(_Typography.default, Object.assign({\n    className: (0, _classnames.default)({\n      [`${prefixCls}-${type}`]: type,\n      [`${prefixCls}-disabled`]: disabled,\n      [`${prefixCls}-ellipsis`]: enableEllipsis,\n      [`${prefixCls}-ellipsis-single-line`]: cssTextOverflow,\n      [`${prefixCls}-ellipsis-multiple-line`]: cssLineClamp\n    }, className),\n    prefixCls: customizePrefixCls,\n    style: Object.assign(Object.assign({}, style), {\n      WebkitLineClamp: cssLineClamp ? rows : undefined\n    }),\n    component: component,\n    ref: (0, _ref.composeRef)(resizeRef, typographyRef, ref),\n    direction: direction,\n    onClick: triggerType.includes('text') ? onEditClick : undefined,\n    \"aria-label\": topAriaLabel === null || topAriaLabel === void 0 ? void 0 : topAriaLabel.toString(),\n    title: title\n  }, textProps), /*#__PURE__*/React.createElement(_Ellipsis.default, {\n    enableMeasure: mergedEnableEllipsis && !cssEllipsis,\n    text: children,\n    rows: rows,\n    width: ellipsisWidth,\n    onEllipsis: onJsEllipsis,\n    expanded: expanded,\n    miscDeps: [copied, expanded, copyLoading, enableEdit, enableCopy, textLocale].concat((0, _toConsumableArray2.default)(DECORATION_PROPS.map(key => props[key])))\n  }, (node, canEllipsis) => wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, node.length > 0 && canEllipsis && !expanded && topAriaLabel ? (/*#__PURE__*/React.createElement(\"span\", {\n    key: \"show-content\",\n    \"aria-hidden\": true\n  }, node)) : node, renderEllipsis(canEllipsis))))))));\n});\nvar _default = exports.default = Base;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
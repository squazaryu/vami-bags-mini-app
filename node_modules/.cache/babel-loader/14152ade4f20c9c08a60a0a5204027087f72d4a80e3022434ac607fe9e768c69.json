{"ast":null,"code":"import React from'react';import OrderForm from'./components/OrderForm';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";function App(){return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsx(OrderForm,{})});}export default App;","map":{"version":3,"names":["React","OrderForm","jsx","_jsx","App","className","children"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/src/App.tsx"],"sourcesContent":["import React from 'react';\nimport OrderForm from './components/OrderForm';\nimport './App.css';\n\ndeclare global {\n  interface Window {\n    Telegram: {\n      WebApp: {\n        initData: string;\n        initDataUnsafe: {\n          query_id: string;\n          user: {\n            id: number;\n            first_name: string;\n            last_name?: string;\n            username?: string;\n            language_code?: string;\n          };\n          receiver: {\n            id: number;\n            first_name: string;\n            last_name?: string;\n            username?: string;\n            language_code?: string;\n          };\n          chat: {\n            id: number;\n            type: string;\n            title: string;\n            username?: string;\n          };\n          chat_type: string;\n          chat_instance: string;\n          start_param?: string;\n          can_send_after: number;\n          auth_date: number;\n          hash: string;\n        };\n        ready: () => void;\n        expand: () => void;\n        close: () => void;\n        showAlert: (message: string) => void;\n        sendData: (data: string) => void;\n        MainButton: {\n          text: string;\n          color: string;\n          textColor: string;\n          isVisible: boolean;\n          isActive: boolean;\n          isProgressVisible: boolean;\n          setText: (text: string) => void;\n          onClick: (callback: () => void) => void;\n          show: () => void;\n          hide: () => void;\n          enable: () => void;\n          disable: () => void;\n          showProgress: (leaveActive?: boolean) => void;\n          hideProgress: () => void;\n        };\n        BackButton: {\n          isVisible: boolean;\n          onClick: (callback: () => void) => void;\n          show: () => void;\n          hide: () => void;\n        };\n        HapticFeedback: {\n          impactOccurred: (style: 'light' | 'medium' | 'heavy' | 'rigid' | 'soft') => void;\n          notificationOccurred: (type: 'error' | 'success' | 'warning') => void;\n          selectionChanged: () => void;\n        };\n        themeParams: {\n          bg_color: string;\n          text_color: string;\n          hint_color: string;\n          link_color: string;\n          button_color: string;\n          button_text_color: string;\n        };\n        colorScheme: 'light' | 'dark';\n        isExpanded: boolean;\n        viewportHeight: number;\n        viewportStableHeight: number;\n        headerColor: string;\n        backgroundColor: string;\n        isClosingConfirmationEnabled: boolean;\n      };\n    };\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <OrderForm />\n    </div>\n  );\n}\n\nexport default App; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,wBAAwB,CAC9C,MAAO,WAAW,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAwFnB,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,mBACED,IAAA,QAAKE,SAAS,CAAC,KAAK,CAAAC,QAAA,cAClBH,IAAA,CAACF,SAAS,GAAE,CAAC,CACV,CAAC,CAEV,CAEA,cAAe,CAAAG,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPixelRatio = getPixelRatio;\nexports.getStyleStr = getStyleStr;\nexports.reRendering = void 0;\nexports.toLowercaseSeparator = toLowercaseSeparator;\n/** converting camel-cased strings to be lowercase and link it with Separator */\nfunction toLowercaseSeparator(key) {\n  return key.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\nfunction getStyleStr(style) {\n  return Object.keys(style).map(key => `${toLowercaseSeparator(key)}: ${style[key]};`).join(' ');\n}\n/** Returns the ratio of the device's physical pixel resolution to the css pixel resolution */\nfunction getPixelRatio() {\n  return window.devicePixelRatio || 1;\n}\n/** Whether to re-render the watermark */\nconst reRendering = (mutation, isWatermarkEle) => {\n  let flag = false;\n  // Whether to delete the watermark node\n  if (mutation.removedNodes.length) {\n    flag = Array.from(mutation.removedNodes).some(node => isWatermarkEle(node));\n  }\n  // Whether the watermark dom property value has been modified\n  if (mutation.type === 'attributes' && isWatermarkEle(mutation.target)) {\n    flag = true;\n  }\n  return flag;\n};\nexports.reRendering = reRendering;","map":{"version":3,"names":["Object","defineProperty","exports","value","getPixelRatio","getStyleStr","reRendering","toLowercaseSeparator","key","replace","toLowerCase","style","keys","map","join","window","devicePixelRatio","mutation","isWatermarkEle","flag","removedNodes","length","Array","from","some","node","type","target"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/watermark/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getPixelRatio = getPixelRatio;\nexports.getStyleStr = getStyleStr;\nexports.reRendering = void 0;\nexports.toLowercaseSeparator = toLowercaseSeparator;\n/** converting camel-cased strings to be lowercase and link it with Separator */\nfunction toLowercaseSeparator(key) {\n  return key.replace(/([A-Z])/g, '-$1').toLowerCase();\n}\nfunction getStyleStr(style) {\n  return Object.keys(style).map(key => `${toLowercaseSeparator(key)}: ${style[key]};`).join(' ');\n}\n/** Returns the ratio of the device's physical pixel resolution to the css pixel resolution */\nfunction getPixelRatio() {\n  return window.devicePixelRatio || 1;\n}\n/** Whether to re-render the watermark */\nconst reRendering = (mutation, isWatermarkEle) => {\n  let flag = false;\n  // Whether to delete the watermark node\n  if (mutation.removedNodes.length) {\n    flag = Array.from(mutation.removedNodes).some(node => isWatermarkEle(node));\n  }\n  // Whether the watermark dom property value has been modified\n  if (mutation.type === 'attributes' && isWatermarkEle(mutation.target)) {\n    flag = true;\n  }\n  return flag;\n};\nexports.reRendering = reRendering;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,aAAa,GAAGA,aAAa;AACrCF,OAAO,CAACG,WAAW,GAAGA,WAAW;AACjCH,OAAO,CAACI,WAAW,GAAG,KAAK,CAAC;AAC5BJ,OAAO,CAACK,oBAAoB,GAAGA,oBAAoB;AACnD;AACA,SAASA,oBAAoBA,CAACC,GAAG,EAAE;EACjC,OAAOA,GAAG,CAACC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAACC,WAAW,CAAC,CAAC;AACrD;AACA,SAASL,WAAWA,CAACM,KAAK,EAAE;EAC1B,OAAOX,MAAM,CAACY,IAAI,CAACD,KAAK,CAAC,CAACE,GAAG,CAACL,GAAG,IAAI,GAAGD,oBAAoB,CAACC,GAAG,CAAC,KAAKG,KAAK,CAACH,GAAG,CAAC,GAAG,CAAC,CAACM,IAAI,CAAC,GAAG,CAAC;AAChG;AACA;AACA,SAASV,aAAaA,CAAA,EAAG;EACvB,OAAOW,MAAM,CAACC,gBAAgB,IAAI,CAAC;AACrC;AACA;AACA,MAAMV,WAAW,GAAGA,CAACW,QAAQ,EAAEC,cAAc,KAAK;EAChD,IAAIC,IAAI,GAAG,KAAK;EAChB;EACA,IAAIF,QAAQ,CAACG,YAAY,CAACC,MAAM,EAAE;IAChCF,IAAI,GAAGG,KAAK,CAACC,IAAI,CAACN,QAAQ,CAACG,YAAY,CAAC,CAACI,IAAI,CAACC,IAAI,IAAIP,cAAc,CAACO,IAAI,CAAC,CAAC;EAC7E;EACA;EACA,IAAIR,QAAQ,CAACS,IAAI,KAAK,YAAY,IAAIR,cAAc,CAACD,QAAQ,CAACU,MAAM,CAAC,EAAE;IACrER,IAAI,GAAG,IAAI;EACb;EACA,OAAOA,IAAI;AACb,CAAC;AACDjB,OAAO,CAACI,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
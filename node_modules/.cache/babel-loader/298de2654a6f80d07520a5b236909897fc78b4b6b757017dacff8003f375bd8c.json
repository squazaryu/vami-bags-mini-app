{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _ = require(\".\");\nvar _style = require(\"../../style\");\nvar _internal = require(\"../../theme/internal\");\n// ============================== Ribbon ==============================\nconst genRibbonStyle = token => {\n  const {\n    antCls,\n    badgeFontHeight,\n    marginXS,\n    badgeRibbonOffset,\n    calc\n  } = token;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusRibbonPreset = (0, _internal.genPresetColor)(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [ribbonWrapperPrefixCls]: {\n      position: 'relative'\n    },\n    [ribbonPrefixCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, (0, _style.resetComponent)(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${(0, _cssinjs.unit)(token.paddingXS)}`,\n      color: token.colorPrimary,\n      lineHeight: (0, _cssinjs.unit)(badgeFontHeight),\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.badgeTextColor\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${(0, _cssinjs.unit)(calc(badgeRibbonOffset).div(2).equal())} solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nvar _default = exports.default = (0, _internal.genStyleHooks)(['Badge', 'Ribbon'], token => {\n  const badgeToken = (0, _.prepareToken)(token);\n  return genRibbonStyle(badgeToken);\n}, _.prepareComponentToken);","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_cssinjs","require","_","_style","_internal","genRibbonStyle","token","antCls","badgeFontHeight","marginXS","badgeRibbonOffset","calc","ribbonPrefixCls","ribbonWrapperPrefixCls","statusRibbonPreset","genPresetColor","colorKey","_ref","darkColor","background","color","position","assign","resetComponent","top","padding","unit","paddingXS","colorPrimary","lineHeight","whiteSpace","backgroundColor","borderRadius","borderRadiusSM","badgeTextColor","width","height","border","div","equal","transform","badgeRibbonCornerTransform","transformOrigin","filter","badgeRibbonCornerFilter","insetInlineEnd","mul","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","insetInlineStart","borderEndStartRadius","borderInlineStartColor","direction","_default","genStyleHooks","badgeToken","prepareToken","prepareComponentToken"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/badge/style/ribbon.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _ = require(\".\");\nvar _style = require(\"../../style\");\nvar _internal = require(\"../../theme/internal\");\n// ============================== Ribbon ==============================\nconst genRibbonStyle = token => {\n  const {\n    antCls,\n    badgeFontHeight,\n    marginXS,\n    badgeRibbonOffset,\n    calc\n  } = token;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const statusRibbonPreset = (0, _internal.genPresetColor)(token, (colorKey, {\n    darkColor\n  }) => ({\n    [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n      background: darkColor,\n      color: darkColor\n    }\n  }));\n  return {\n    [ribbonWrapperPrefixCls]: {\n      position: 'relative'\n    },\n    [ribbonPrefixCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, (0, _style.resetComponent)(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${(0, _cssinjs.unit)(token.paddingXS)}`,\n      color: token.colorPrimary,\n      lineHeight: (0, _cssinjs.unit)(badgeFontHeight),\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.badgeTextColor\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${(0, _cssinjs.unit)(calc(badgeRibbonOffset).div(2).equal())} solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: calc(badgeRibbonOffset).mul(-1).equal(),\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nvar _default = exports.default = (0, _internal.genStyleHooks)(['Badge', 'Ribbon'], token => {\n  const badgeToken = (0, _.prepareToken)(token);\n  return genRibbonStyle(badgeToken);\n}, _.prepareComponentToken);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatCounter = formatCounter;\nexports.formatTimeStr = formatTimeStr;\n// Countdown\nconst timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365],\n// years\n['M', 1000 * 60 * 60 * 24 * 30],\n// months\n['D', 1000 * 60 * 60 * 24],\n// days\n['H', 1000 * 60 * 60],\n// hours\n['m', 1000 * 60],\n// minutes\n['s', 1000],\n// seconds\n['S', 1] // million seconds\n];\nfunction formatTimeStr(duration, format) {\n  let leftDuration = duration;\n  const escapeRegex = /\\[[^\\]]*]/g;\n  const keepList = (format.match(escapeRegex) || []).map(str => str.slice(1, -1));\n  const templateText = format.replace(escapeRegex, '[]');\n  const replacedText = timeUnits.reduce((current, _ref) => {\n    let [name, unit] = _ref;\n    if (current.includes(name)) {\n      const value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(`${name}+`, 'g'), match => {\n        const len = match.length;\n        return value.toString().padStart(len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  let index = 0;\n  return replacedText.replace(escapeRegex, () => {\n    const match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nfunction formatCounter(value, config, down) {\n  const {\n    format = ''\n  } = config;\n  const target = new Date(value).getTime();\n  const current = Date.now();\n  const diff = down ? Math.max(target - current, 0) : Math.max(current - target, 0);\n  return formatTimeStr(diff, format);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","formatCounter","formatTimeStr","timeUnits","duration","format","leftDuration","escapeRegex","keepList","match","map","str","slice","templateText","replace","replacedText","reduce","current","_ref","name","unit","includes","Math","floor","RegExp","len","length","toString","padStart","index","config","down","target","Date","getTime","now","diff","max"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/statistic/utils.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatCounter = formatCounter;\nexports.formatTimeStr = formatTimeStr;\n// Countdown\nconst timeUnits = [['Y', 1000 * 60 * 60 * 24 * 365],\n// years\n['M', 1000 * 60 * 60 * 24 * 30],\n// months\n['D', 1000 * 60 * 60 * 24],\n// days\n['H', 1000 * 60 * 60],\n// hours\n['m', 1000 * 60],\n// minutes\n['s', 1000],\n// seconds\n['S', 1] // million seconds\n];\nfunction formatTimeStr(duration, format) {\n  let leftDuration = duration;\n  const escapeRegex = /\\[[^\\]]*]/g;\n  const keepList = (format.match(escapeRegex) || []).map(str => str.slice(1, -1));\n  const templateText = format.replace(escapeRegex, '[]');\n  const replacedText = timeUnits.reduce((current, [name, unit]) => {\n    if (current.includes(name)) {\n      const value = Math.floor(leftDuration / unit);\n      leftDuration -= value * unit;\n      return current.replace(new RegExp(`${name}+`, 'g'), match => {\n        const len = match.length;\n        return value.toString().padStart(len, '0');\n      });\n    }\n    return current;\n  }, templateText);\n  let index = 0;\n  return replacedText.replace(escapeRegex, () => {\n    const match = keepList[index];\n    index += 1;\n    return match;\n  });\n}\nfunction formatCounter(value, config, down) {\n  const {\n    format = ''\n  } = config;\n  const target = new Date(value).getTime();\n  const current = Date.now();\n  const diff = down ? Math.max(target - current, 0) : Math.max(current - target, 0);\n  return formatTimeStr(diff, format);\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
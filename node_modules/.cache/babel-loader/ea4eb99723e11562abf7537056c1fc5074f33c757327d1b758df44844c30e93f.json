{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _fastColor = require(\"@ant-design/fast-color\");\nvar _style = require(\"../../style\");\nvar _internal = require(\"../../theme/internal\");\nconst genQRCodeStyle = token => {\n  const {\n    componentCls,\n    lineWidth,\n    lineType,\n    colorSplit\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, (0, _style.resetComponent)(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${(0, _cssinjs.unit)(lineWidth)} ${lineType} ${colorSplit}`,\n      position: 'relative',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired, & > ${componentCls}-scanned`]: {\n          color: token.QRCodeTextColor\n        }\n      },\n      '> canvas': {\n        alignSelf: 'stretch',\n        flex: 'auto',\n        minWidth: 0\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      padding: 0,\n      borderRadius: 0\n    }\n  };\n};\nconst prepareComponentToken = token => ({\n  QRCodeMaskBackgroundColor: new _fastColor.FastColor(token.colorBgContainer).setA(0.96).toRgbString()\n});\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('QRCode', token => {\n  const mergedToken = (0, _internal.mergeToken)(token, {\n    QRCodeTextColor: token.colorText\n  });\n  return genQRCodeStyle(mergedToken);\n}, prepareComponentToken);","map":{"version":3,"names":["Object","defineProperty","exports","value","prepareComponentToken","default","_cssinjs","require","_fastColor","_style","_internal","genQRCodeStyle","token","componentCls","lineWidth","lineType","colorSplit","assign","resetComponent","display","justifyContent","alignItems","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","unit","position","overflow","insetBlockStart","insetInlineStart","zIndex","flexDirection","width","height","color","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeTextColor","alignSelf","flex","minWidth","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor","FastColor","colorBgContainer","setA","toRgbString","_default","genStyleHooks","mergedToken","mergeToken"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/qr-code/style/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _fastColor = require(\"@ant-design/fast-color\");\nvar _style = require(\"../../style\");\nvar _internal = require(\"../../theme/internal\");\nconst genQRCodeStyle = token => {\n  const {\n    componentCls,\n    lineWidth,\n    lineType,\n    colorSplit\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, (0, _style.resetComponent)(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${(0, _cssinjs.unit)(lineWidth)} ${lineType} ${colorSplit}`,\n      position: 'relative',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired, & > ${componentCls}-scanned`]: {\n          color: token.QRCodeTextColor\n        }\n      },\n      '> canvas': {\n        alignSelf: 'stretch',\n        flex: 'auto',\n        minWidth: 0\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent',\n      padding: 0,\n      borderRadius: 0\n    }\n  };\n};\nconst prepareComponentToken = token => ({\n  QRCodeMaskBackgroundColor: new _fastColor.FastColor(token.colorBgContainer).setA(0.96).toRgbString()\n});\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('QRCode', token => {\n  const mergedToken = (0, _internal.mergeToken)(token, {\n    QRCodeTextColor: token.colorText\n  });\n  return genQRCodeStyle(mergedToken);\n}, prepareComponentToken);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _internal = require(\"../../theme/internal\");\nvar _utils = require(\"../utils\");\nconst genFlexStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'flex',\n      margin: 0,\n      padding: 0,\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&:empty': {\n        display: 'none'\n      }\n    }\n  };\n};\nconst genFlexGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-small': {\n        gap: token.flexGapSM\n      },\n      '&-gap-middle': {\n        gap: token.flexGap\n      },\n      '&-gap-large': {\n        gap: token.flexGapLG\n      }\n    }\n  };\n};\nconst genFlexWrapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const wrapStyle = {};\n  _utils.flexWrapValues.forEach(value => {\n    wrapStyle[`${componentCls}-wrap-${value}`] = {\n      flexWrap: value\n    };\n  });\n  return wrapStyle;\n};\nconst genAlignItemsStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const alignStyle = {};\n  _utils.alignItemsValues.forEach(value => {\n    alignStyle[`${componentCls}-align-${value}`] = {\n      alignItems: value\n    };\n  });\n  return alignStyle;\n};\nconst genJustifyContentStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const justifyStyle = {};\n  _utils.justifyContentValues.forEach(value => {\n    justifyStyle[`${componentCls}-justify-${value}`] = {\n      justifyContent: value\n    };\n  });\n  return justifyStyle;\n};\nconst prepareComponentToken = () => ({});\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('Flex', token => {\n  const {\n    paddingXS,\n    padding,\n    paddingLG\n  } = token;\n  const flexToken = (0, _internal.mergeToken)(token, {\n    flexGapSM: paddingXS,\n    flexGap: padding,\n    flexGapLG: paddingLG\n  });\n  return [genFlexStyle(flexToken), genFlexGapStyle(flexToken), genFlexWrapStyle(flexToken), genAlignItemsStyle(flexToken), genJustifyContentStyle(flexToken)];\n}, prepareComponentToken, {\n  // Flex component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/46403\n  resetStyle: false\n});","map":{"version":3,"names":["Object","defineProperty","exports","value","prepareComponentToken","default","_internal","require","_utils","genFlexStyle","token","componentCls","display","margin","padding","flexDirection","direction","genFlexGapStyle","gap","flexGapSM","flexGap","flexGapLG","genFlexWrapStyle","wrapStyle","flexWrapValues","forEach","flexWrap","genAlignItemsStyle","alignStyle","alignItemsValues","alignItems","genJustifyContentStyle","justifyStyle","justifyContentValues","justifyContent","_default","genStyleHooks","paddingXS","paddingLG","flexToken","mergeToken","resetStyle"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/flex/style/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _internal = require(\"../../theme/internal\");\nvar _utils = require(\"../utils\");\nconst genFlexStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      display: 'flex',\n      margin: 0,\n      padding: 0,\n      '&-vertical': {\n        flexDirection: 'column'\n      },\n      '&-rtl': {\n        direction: 'rtl'\n      },\n      '&:empty': {\n        display: 'none'\n      }\n    }\n  };\n};\nconst genFlexGapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: {\n      '&-gap-small': {\n        gap: token.flexGapSM\n      },\n      '&-gap-middle': {\n        gap: token.flexGap\n      },\n      '&-gap-large': {\n        gap: token.flexGapLG\n      }\n    }\n  };\n};\nconst genFlexWrapStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const wrapStyle = {};\n  _utils.flexWrapValues.forEach(value => {\n    wrapStyle[`${componentCls}-wrap-${value}`] = {\n      flexWrap: value\n    };\n  });\n  return wrapStyle;\n};\nconst genAlignItemsStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const alignStyle = {};\n  _utils.alignItemsValues.forEach(value => {\n    alignStyle[`${componentCls}-align-${value}`] = {\n      alignItems: value\n    };\n  });\n  return alignStyle;\n};\nconst genJustifyContentStyle = token => {\n  const {\n    componentCls\n  } = token;\n  const justifyStyle = {};\n  _utils.justifyContentValues.forEach(value => {\n    justifyStyle[`${componentCls}-justify-${value}`] = {\n      justifyContent: value\n    };\n  });\n  return justifyStyle;\n};\nconst prepareComponentToken = () => ({});\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('Flex', token => {\n  const {\n    paddingXS,\n    padding,\n    paddingLG\n  } = token;\n  const flexToken = (0, _internal.mergeToken)(token, {\n    flexGapSM: paddingXS,\n    flexGap: padding,\n    flexGapLG: paddingLG\n  });\n  return [genFlexStyle(flexToken), genFlexGapStyle(flexToken), genFlexWrapStyle(flexToken), genAlignItemsStyle(flexToken), genJustifyContentStyle(flexToken)];\n}, prepareComponentToken, {\n  // Flex component don't apply extra font style\n  // https://github.com/ant-design/ant-design/issues/46403\n  resetStyle: false\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
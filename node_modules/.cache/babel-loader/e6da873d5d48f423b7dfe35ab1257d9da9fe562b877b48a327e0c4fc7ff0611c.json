{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Typography,Button,Card,Table,Alert,Spin,Result,message,Input}from'antd/lib/index';import styled from'styled-components';import{testProxyConnection,axiosInstance}from'../utils/proxyTest';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Title}=Typography;// Стилизованные компоненты для мобильного интерфейса со светлой темой\nconst Container=styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n`;const StyledTitle=styled(Title)`\n  text-align: center;\n  margin-bottom: 20px !important;\n  color: #000000 !important;\n  font-size: 22px !important;\n  \n  @media (max-width: 320px) {\n    font-size: 20px !important;\n  }\n`;const StyledCard=styled(Card)`\n  border-radius: 12px;\n  margin-bottom: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);\n  \n  .ant-table {\n    background: transparent;\n  }\n  \n  .ant-table-thead > tr > th {\n    background-color: #f5f5f5;\n    color: rgba(0, 0, 0, 0.65);\n    font-weight: 500;\n  }\n  \n  .ant-table-tbody > tr > td {\n    color: #000000;\n  }\n  \n  .ant-table-thead > tr > th,\n  .ant-table-tbody > tr > td {\n    padding: 12px 16px;\n    font-size: 14px;\n  }\n  \n  @media (max-width: 576px) {\n    .ant-table-thead > tr > th,\n    .ant-table-tbody > tr > td {\n      padding: 10px 12px;\n      font-size: 13px;\n    }\n  }\n`;const ButtonContainer=styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 16px;\n`;const ActionButton=styled(Button)`\n  min-width: 100px;\n  height: 36px;\n  border-radius: 10px;\n  font-weight: 500;\n  \n  &.submit-button {\n    background-color: #1890ff;\n    border-color: #1890ff;\n    color: #ffffff;\n  }\n`;const CloseButton=styled(Button)`\n  min-width: 100px;\n  background-color: #F2F2F7;\n  font-weight: 500;\n  height: 36px;\n  border-radius: 10px;\n  box-shadow: none;\n  border: 1px solid #E5E5EA;\n  color: #000000;\n  \n  &:hover {\n    border-color: #FF3B30;\n    color: #FF3B30;\n  }\n`;const PreviewStep=_ref=>{var _window$Telegram;let{orderDetails,onBack,onClose}=_ref;// Инициализация Telegram Web App\nconst tgWebApp=(_window$Telegram=window.Telegram)===null||_window$Telegram===void 0?void 0:_window$Telegram.WebApp;const[isSubmitting,setIsSubmitting]=useState(false);const[success,setSuccess]=useState(false);const[error,setError]=useState(null);const[userInfo,setUserInfo]=useState(null);const[debugInfo,setDebugInfo]=useState('');const[contactRequested,setContactRequested]=useState(false);// Флаг, что контакт запрошен\nconst[showContactRequest,setShowContactRequest]=useState(false);const[isLoading,setIsLoading]=useState(false);const[phoneNumber,setPhoneNumber]=useState(null);const[editableUserInfo,setEditableUserInfo]=useState(()=>{// Пытаемся получить сохраненное состояние из localStorage\nconst savedState=localStorage.getItem('editableUserInfo');if(savedState){try{const parsedState=JSON.parse(savedState);console.log(\"[DEBUG] Restored state from localStorage:\",parsedState);return parsedState;}catch(e){console.error('Error parsing saved state:',e);}}// Если нет сохраненного состояния, используем данные пользователя\nif(userInfo){const fullName=`${userInfo.first_name} ${userInfo.last_name||''}`.trim();return{name:fullName,username:userInfo.username||'',phone:null};}return{name:'',username:'',phone:null};});// Сервер с прокси для отправки сообщений\nconst SERVER_URL=\"https://telegram-bot-webhook-proxy.vercel.app/api/send-message\";// ID продавца и токен бота\nconst SELLER_CHAT_ID=\"50122963\";const BOT_TOKEN=\"7408506728:AAGK9d5kddSnMQDwgIYOiEK-6nPFFwgYP-M\";// Перевод цветов на русский\nconst colorTranslations={'pink':'Розовый','red':'Красный','blue':'Синий','green':'Зеленый','yellow':'Желтый','black':'Черный','white':'Белый','purple':'Фиолетовый','orange':'Оранжевый','gray':'Серый','brown':'Коричневый','gold':'Золотой','silver':'Серебряный','darkred':'Темно-красный','darkblue':'Темно-синий','darkgreen':'Темно-зеленый','#f5222d':'Красный','#eb2f96':'Розовый','#722ed1':'Фиолетовый','#1890ff':'Синий','#13c2c2':'Голубой','#52c41a':'Зеленый','#fadb14':'Желтый','#fa8c16':'Оранжевый','#000000':'Черный','#8c8c8c':'Серый','#ffffff':'Белый','#8B0000':'Темно-красный','#00008B':'Темно-синий','#006400':'Темно-зеленый','#FFC0CB':'Розовый'};// Перевод опций на русский\nconst optionTranslations={'clasp':'Застежка','lining':'Подкладка','chain':'Цепочка','short_handle':'Короткая ручка','long_handle':'Длинная ручка','pocket':'Карман','zipper':'Молния','embroidery':'Вышивка','custom_color':'Индивидуальный цвет'};// Перевод форм на русский\nconst shapeTranslations={'kruglaya':'Круглая','pryamougolnaya':'Прямоугольная','kvadratnaya':'Квадратная','trapeciya':'Трапеция','mesyac':'Месяц','serdce':'Сердце','round':'Круглая','rectangular':'Прямоугольная','square':'Квадратная','trapezoid':'Трапеция','crescent':'Месяц','heart':'Сердце'};// Перевод материалов на русский\nconst materialTranslations={'akril':'Акрил','hrustal':'Хрусталь','swarovski':'Swarovski','acrylic':'Акрил','crystal':'Хрусталь'};// Загружаем информацию о пользователе при монтировании компонента\nuseEffect(()=>{let mainButtonClickHandler=null;try{var _tgWebApp$initDataUns;// Тестируем подключение к прокси-серверу\ntestProxyConnection().then(success=>{if(!success){console.error(\"Не удалось подключиться к прокси-серверу\");setError(\"Ошибка: Не удалось подключиться к серверу отправки сообщений\");}});if(tgWebApp!==null&&tgWebApp!==void 0&&(_tgWebApp$initDataUns=tgWebApp.initDataUnsafe)!==null&&_tgWebApp$initDataUns!==void 0&&_tgWebApp$initDataUns.user){console.log(\"User data available:\",tgWebApp.initDataUnsafe.user);setUserInfo(tgWebApp.initDataUnsafe.user);setDebugInfo(prev=>prev+`\\nUser data: ${JSON.stringify(tgWebApp.initDataUnsafe.user)}`);}else{console.log(\"No user data available\");setDebugInfo(prev=>prev+'\\nNo user data available');}console.log(\"Full WebApp data:\",tgWebApp);setDebugInfo(prev=>prev+`\\nTelegram WebApp available: ${!!tgWebApp}`);if(tgWebApp){setDebugInfo(prev=>prev+`\\nVersion: ${tgWebApp.version}`);setDebugInfo(prev=>prev+`\\nPlatform: ${tgWebApp.platform}`);// Настраиваем MainButton - всегда показываем независимо от userInfo\nif(tgWebApp.MainButton){tgWebApp.MainButton.setText('Подтвердить заказ');tgWebApp.MainButton.show();tgWebApp.MainButton.color='#1890ff';tgWebApp.MainButton.textColor='#ffffff';mainButtonClickHandler=handleSubmit;tgWebApp.MainButton.onClick(mainButtonClickHandler);console.log(\"MainButton configured with handleSubmit\");setDebugInfo(prev=>prev+\"\\nMainButton configured with handleSubmit\");}}}catch(e){console.error(\"Error initializing component or accessing user data\",e);setDebugInfo(prev=>prev+`\\nError initializing: ${e}`);setError(\"Произошла ошибка при инициализации. Попробуйте перезапустить приложение.\");}// Очистка обработчика при размонтировании\nreturn()=>{if(tgWebApp!==null&&tgWebApp!==void 0&&tgWebApp.MainButton&&mainButtonClickHandler){tgWebApp.MainButton.offClick(mainButtonClickHandler);}};},[tgWebApp]);// Убираем userInfo из зависимостей, чтобы кнопка настраивалась независимо от наличия данных\n// Сохраняем состояние в localStorage при каждом изменении\nuseEffect(()=>{localStorage.setItem('editableUserInfo',JSON.stringify(editableUserInfo));},[editableUserInfo]);// Обновляем editableUserInfo при изменении phoneNumber\nuseEffect(()=>{if(phoneNumber){console.log(\"[DEBUG] Updating editableUserInfo with phoneNumber:\",phoneNumber);setEditableUserInfo(prev=>{const newState={...prev,phone:phoneNumber};console.log(\"[DEBUG] New editableUserInfo state after phone update:\",newState);localStorage.setItem('editableUserInfo',JSON.stringify(newState));return newState;});}},[phoneNumber]);// Обновляем editableUserInfo при получении userInfo\nuseEffect(()=>{if(userInfo){console.log(\"[DEBUG] Updating editableUserInfo with userInfo:\",userInfo);const fullName=`${userInfo.first_name} ${userInfo.last_name||''}`.trim();console.log(\"[DEBUG] Full name:\",fullName);setEditableUserInfo(prev=>{const newState={name:fullName,username:userInfo.username||'',phone:prev.phone||phoneNumber};console.log(\"[DEBUG] New editableUserInfo state after userInfo update:\",newState);localStorage.setItem('editableUserInfo',JSON.stringify(newState));return newState;});}},[userInfo,phoneNumber]);// Обработчик изменения полей\nconst handleFieldChange=(field,value)=>{console.log(\"[DEBUG] handleFieldChange called with field:\",field,\"value:\",value);setEditableUserInfo(prev=>{const newState={...prev,[field]:value};console.log(\"[DEBUG] New editableUserInfo state:\",newState);localStorage.setItem('editableUserInfo',JSON.stringify(newState));return newState;});};// Функция форматирования для отображения данных заказа\nconst formatOrderData=()=>{console.log('Formatting order data from:',orderDetails);const formattedProduct=orderDetails.product==='bag'?'Сумка':orderDetails.product==='coaster'?'Подстаканник':orderDetails.product==='custom'?'Индивидуальный заказ':orderDetails.product||'';const formattedShape=orderDetails.shape?shapeTranslations[orderDetails.shape]||orderDetails.shape:'';const formattedMaterial=orderDetails.material?materialTranslations[orderDetails.material]||orderDetails.material:'';const formattedColor=orderDetails.color?colorTranslations[orderDetails.color]||orderDetails.color:'';let formattedOptions='';if(orderDetails.options&&orderDetails.options.length>0){const translatedOptions=orderDetails.options.map(option=>optionTranslations[option]||option);formattedOptions=translatedOptions.join(', ');}const formattedDescription=orderDetails.customDescription||'';return{product:formattedProduct,size:orderDetails.size||'',shape:formattedShape,material:formattedMaterial,color:formattedColor,colorPreference:orderDetails.colorPreference||'',options:formattedOptions,customDescription:formattedDescription};};// Подготовка данных для таблицы\nconst formattedOrderData=formatOrderData();const dataSource=[];// Тип изделия (обязательное поле)\ndataSource.push({key:'product',parameter:'Тип изделия',value:formattedOrderData.product});// Размер (только для сумок)\nif(orderDetails.product==='bag'&&formattedOrderData.size){dataSource.push({key:'size',parameter:'Размер',value:formattedOrderData.size});}// Форма (только для сумок)\nif(orderDetails.product==='bag'&&formattedOrderData.shape){dataSource.push({key:'shape',parameter:'Форма',value:formattedOrderData.shape});}// Материал\nif(formattedOrderData.material){dataSource.push({key:'material',parameter:'Материал',value:formattedOrderData.material});}// Цвет\nif(formattedOrderData.color){dataSource.push({key:'color',parameter:'Цвет',value:formattedOrderData.color+(formattedOrderData.colorPreference?`\\nДополнительные пожелания: ${formattedOrderData.colorPreference}`:'')});}// Опции\nif(formattedOrderData.options){dataSource.push({key:'options',parameter:'Дополнительные опции',value:formattedOrderData.options});}// Описание пользовательского заказа\nif(formattedOrderData.customDescription){dataSource.push({key:'customDescription',parameter:'Описание',value:formattedOrderData.customDescription});}// Определение колонок таблицы\nconst columns=[{title:'',dataIndex:'parameter',key:'parameter',width:'40%'},{title:'',dataIndex:'value',key:'value',width:'60%'}];// Функция для генерации текста заказа при отправке  \nconst generateOrderText=(orderData,contactInfo,sharedPhoneNumber)=>{console.log(\"[DEBUG] Generating order text with data:\",orderData);console.log(\"[DEBUG] Contact info:\",contactInfo);console.log(\"[DEBUG] Editable user info:\",editableUserInfo);const colorName=colorTranslations[orderData.color]||orderData.color;const colorPreferenceText=orderData.colorPreference?`\\nДополнительные пожелания по цвету: ${orderData.colorPreference}`:'';const orderText=`\n🛍 Новый заказ!\n\nИзделие: ${orderData.product==='custom'?'Индивидуальный заказ':orderData.product==='coaster'?'Подставка':'Сумка'}\n${orderData.product!=='custom'?`Размер: ${orderData.size}`:''}\n${orderData.product!=='custom'?`Форма: ${shapeTranslations[orderData.shape]||orderData.shape}`:''}\n${orderData.product!=='custom'?`Материал: ${materialTranslations[orderData.material]||orderData.material}`:''}\n${orderData.product!=='custom'?`Цвет: ${colorName}${colorPreferenceText}`:''}\n${orderData.options&&orderData.options.length>0?`Дополнительные опции:\\n${orderData.options.map(opt=>`- ${optionTranslations[opt]||opt}`).join('\\n')}`:''}\n${orderData.customDescription?`\\nОписание индивидуального заказа:\\n${orderData.customDescription}`:''}\n\nКонтактная информация:\nИмя: ${editableUserInfo.name||'Не указано'}\nUsername: ${editableUserInfo.username?`@${editableUserInfo.username}`:'Не указан'}\nТелефон: ${sharedPhoneNumber||'Не указан'}\n`;console.log(\"[DEBUG] Generated order text:\",orderText);return orderText;};const handleSubmit=async()=>{console.log(\"[DEBUG] handleSubmit called\");// Получаем актуальное состояние из localStorage перед проверкой\nconst savedState=localStorage.getItem('editableUserInfo');console.log(\"[DEBUG] Saved state from localStorage:\",savedState);let currentState=editableUserInfo;if(savedState){try{currentState=JSON.parse(savedState);console.log(\"[DEBUG] Using state from localStorage:\",currentState);}catch(e){console.error('Error parsing saved state in handleSubmit:',e);}}console.log(\"[DEBUG] Current state for validation:\",currentState);setDebugInfo(prev=>prev+\"\\nhandleSubmit triggered\");if(!tgWebApp){const errorMessage=\"Ошибка: Не удалось получить доступ к Telegram WebApp.\";console.error(errorMessage);setError(errorMessage);setDebugInfo(prev=>prev+\"\\nError: Telegram WebApp not initialized\");// Отправляем информацию об ошибке продавцу\ntry{await axiosInstance.post('/sendMessage',{chat_id:SELLER_CHAT_ID,text:`⚠️ Ошибка при оформлении заказа:\\n${errorMessage}\\n\\nПользователь: ${currentState.name||'Не указано'}\\nUsername: ${currentState.username||'Не указан'}`,parse_mode:'Markdown'});}catch(e){console.error(\"Error sending error notification to seller:\",e);}return;}// Проверяем только наличие телефона\nif(!currentState.phone){const errorMessage='Пожалуйста, укажите номер телефона';console.log(\"[DEBUG] Phone validation failed. Current phone:\",currentState.phone);message.error(errorMessage);// Отправляем информацию об ошибке продавцу\ntry{await axiosInstance.post('/sendMessage',{chat_id:SELLER_CHAT_ID,text:`⚠️ Ошибка валидации при оформлении заказа:\\n${errorMessage}\\n\\nПользователь: ${currentState.name||'Не указано'}\\nUsername: ${currentState.username||'Не указан'}`,parse_mode:'Markdown'});}catch(e){console.error(\"Error sending error notification to seller:\",e);}return;}// Показываем индикатор загрузки на кнопке\ntgWebApp.MainButton.showProgress(false);setIsSubmitting(true);setError(null);setSuccess(false);try{// Сначала отправляем сообщение в чат продавца\nconst orderText=generateOrderText(orderDetails,userInfo,currentState.phone);console.log(\"[DEBUG] Generated order text:\",orderText);try{const response=await axiosInstance.post('/sendMessage',{chat_id:SELLER_CHAT_ID,text:orderText,parse_mode:'Markdown'});console.log(\"[DEBUG] Message sent to seller successfully:\",response.data);setDebugInfo(prev=>prev+\"\\nMessage sent to seller successfully\");}catch(sellerError){const errorMessage=`Ошибка при отправке заказа продавцу: ${(sellerError===null||sellerError===void 0?void 0:sellerError.message)||'Неизвестная ошибка'}`;console.error(\"[DEBUG] Error sending message to seller:\",sellerError);setDebugInfo(prev=>prev+`\\nError sending message to seller: ${sellerError}`);// Отправляем информацию об ошибке продавцу\ntry{await axiosInstance.post('/sendMessage',{chat_id:SELLER_CHAT_ID,text:`⚠️ Ошибка при отправке заказа:\\n${errorMessage}\\n\\nПользователь: ${currentState.name||'Не указано'}\\nUsername: ${currentState.username||'Не указан'}\\n\\nДетали заказа:\\n${orderText}`,parse_mode:'Markdown'});}catch(e){console.error(\"Error sending error notification to seller:\",e);}throw new Error(errorMessage);}// Если сообщение успешно отправлено, отправляем данные в WebApp\nconst orderDataToSend={...orderDetails,user:{id:userInfo===null||userInfo===void 0?void 0:userInfo.id,name:currentState.name,username:currentState.username,phone:currentState.phone}};console.log(\"[DEBUG] Sending data to WebApp:\",orderDataToSend);tgWebApp.sendData(JSON.stringify(orderDataToSend));console.log(\"[DEBUG] Data sent to WebApp successfully\");setDebugInfo(prev=>prev+\"\\nData sent to WebApp successfully\");setSuccess(true);setError(null);}catch(e){const errorMessage=(e===null||e===void 0?void 0:e.message)||'Произошла ошибка при отправке заказа. Попробуйте еще раз.';console.error('[DEBUG] Error in handleSubmit:',e);setError(errorMessage);setDebugInfo(prev=>prev+`\\nError in handleSubmit: ${e}`);// Отправляем информацию об ошибке продавцу\ntry{await axiosInstance.post('/sendMessage',{chat_id:SELLER_CHAT_ID,text:`⚠️ Ошибка при оформлении заказа:\\n${errorMessage}\\n\\nПользователь: ${currentState.name||'Не указано'}\\nUsername: ${currentState.username||'Не указан'}\\n\\nДетали заказа:\\n${JSON.stringify(orderDetails,null,2)}`,parse_mode:'Markdown'});}catch(e){console.error(\"Error sending error notification to seller:\",e);}}finally{// Скрываем индикатор загрузки\ntgWebApp.MainButton.hideProgress();setIsSubmitting(false);}};const handleRequestPhone=()=>{var _window$Telegram2;console.log(\"[DEBUG] handleRequestPhone called\");if(!((_window$Telegram2=window.Telegram)!==null&&_window$Telegram2!==void 0&&_window$Telegram2.WebApp)){console.error('[DEBUG] Telegram WebApp не доступен');message.error('Ошибка: Telegram WebApp не инициализирован.');return;}setIsLoading(true);const webApp=window.Telegram.WebApp;console.log(\"[DEBUG] WebApp object:\",webApp);console.log(\"[DEBUG] WebApp version:\",webApp.version);console.log(\"[DEBUG] WebApp platform:\",webApp.platform);try{console.log(\"[DEBUG] Requesting contact\");webApp.requestContact(success=>{console.log(\"[DEBUG] Contact request callback, success:\",success);if(success){// Контакт был предоставлен, получаем его через getRequestedContact\nconsole.log(\"[DEBUG] Contact request was successful\");webApp.invokeCustomMethod('getRequestedContact',{},(error,contact)=>{if(error){console.error('[DEBUG] Error getting contact:',error);message.error('Ошибка при получении контакта');setIsLoading(false);return;}try{// Декодируем параметры из URL-encoded строки\nconst params=new URLSearchParams(contact);const contactData=JSON.parse(decodeURIComponent(params.get('contact')||'{}'));console.log(\"[DEBUG] Received contact data:\",contactData);if(contactData.phone_number){console.log(\"[DEBUG] Setting phone number:\",contactData.phone_number);const formattedPhone=contactData.phone_number.startsWith('+')?contactData.phone_number:`+${contactData.phone_number}`;setPhoneNumber(formattedPhone);setEditableUserInfo(prev=>{const newState={...prev,phone:formattedPhone};console.log(\"[DEBUG] Updated editableUserInfo with phone:\",newState);localStorage.setItem('editableUserInfo',JSON.stringify(newState));return newState;});message.success('Номер телефона получен!');}else{console.warn(\"[DEBUG] No phone number in contact data\");message.error('Не удалось получить номер телефона');}}catch(parseError){console.error('[DEBUG] Error parsing contact data:',parseError);message.error('Ошибка при обработке данных контакта');}finally{setIsLoading(false);}});}else{console.log(\"[DEBUG] Contact request was cancelled\");setIsLoading(false);message.info('Запрос контакта отменен');}});}catch(error){console.error('[DEBUG] Error in handleRequestPhone:',error);message.error('Ошибка при запросе номера телефона');setIsLoading(false);}};// Отображение состояния загрузки, успеха или ошибки\nif(isSubmitting){return/*#__PURE__*/_jsx(Container,{style:{alignItems:'center',justifyContent:'center',height:'80vh'},children:/*#__PURE__*/_jsx(Spin,{size:\"large\",tip:\"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043A\\u0430 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430...\"})});}if(success){return/*#__PURE__*/_jsx(Result,{status:\"success\",title:\"\\u0417\\u0430\\u043A\\u0430\\u0437 \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u043E\\u0442\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D!\",subTitle:\"\\u0421\\u043F\\u0430\\u0441\\u0438\\u0431\\u043E \\u0437\\u0430 \\u0432\\u0430\\u0448 \\u0437\\u0430\\u043A\\u0430\\u0437! \\u041C\\u044B \\u0441\\u043A\\u043E\\u0440\\u043E \\u0441\\u0432\\u044F\\u0436\\u0435\\u043C\\u0441\\u044F \\u0441 \\u0432\\u0430\\u043C\\u0438.\",extra:[/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>tgWebApp===null||tgWebApp===void 0?void 0:tgWebApp.close(),children:\"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"},\"close\")]});}return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(StyledTitle,{level:3,children:\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0436\\u0434\\u0435\\u043D\\u0438\\u0435 \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\"}),error&&/*#__PURE__*/_jsx(Alert,{message:error,type:\"error\",showIcon:true,style:{marginBottom:'16px'},closable:true,onClose:()=>setError(null)}),userInfo&&/*#__PURE__*/_jsx(StyledCard,{title:\"\\u0412\\u0430\\u0448\\u0438 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\",children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'12px'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{style:{display:'block',marginBottom:'4px'},children:\"\\u0418\\u043C\\u044F:\"}),/*#__PURE__*/_jsx(Input,{value:editableUserInfo.name,onChange:e=>handleFieldChange('name',e.target.value),placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{style:{display:'block',marginBottom:'4px'},children:\"\\u041B\\u043E\\u0433\\u0438\\u043D:\"}),/*#__PURE__*/_jsx(Input,{value:editableUserInfo.username,onChange:e=>handleFieldChange('username',e.target.value),placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043B\\u043E\\u0433\\u0438\\u043D\",addonBefore:\"@\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{style:{display:'block',marginBottom:'4px'},children:\"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\"}),phoneNumber?/*#__PURE__*/_jsx(Input,{value:editableUserInfo.phone||'',onChange:e=>handleFieldChange('phone',e.target.value),placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\"}):/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:handleRequestPhone,loading:isLoading,style:{width:'100%'},children:\"\\u041F\\u043E\\u043B\\u0443\\u0447\\u0438\\u0442\\u044C \\u0438\\u0437 Telegram\"})]})]})}),/*#__PURE__*/_jsx(StyledCard,{title:\"\\u0414\\u0435\\u0442\\u0430\\u043B\\u0438 \\u0432\\u0430\\u0448\\u0435\\u0433\\u043E \\u0437\\u0430\\u043A\\u0430\\u0437\\u0430\",children:/*#__PURE__*/_jsx(Table,{dataSource:dataSource,columns:columns,pagination:false,bordered:true,size:\"small\"})}),/*#__PURE__*/_jsx(ButtonContainer,{children:/*#__PURE__*/_jsx(ActionButton,{onClick:onBack,disabled:isSubmitting,children:\"\\u041D\\u0430\\u0437\\u0430\\u0434\"})})]});};export default PreviewStep;","map":{"version":3,"names":["React","useState","useEffect","Typography","Button","Card","Table","Alert","Spin","Result","message","Input","styled","testProxyConnection","axiosInstance","jsx","_jsx","jsxs","_jsxs","Title","Container","div","StyledTitle","StyledCard","ButtonContainer","ActionButton","CloseButton","PreviewStep","_ref","_window$Telegram","orderDetails","onBack","onClose","tgWebApp","window","Telegram","WebApp","isSubmitting","setIsSubmitting","success","setSuccess","error","setError","userInfo","setUserInfo","debugInfo","setDebugInfo","contactRequested","setContactRequested","showContactRequest","setShowContactRequest","isLoading","setIsLoading","phoneNumber","setPhoneNumber","editableUserInfo","setEditableUserInfo","savedState","localStorage","getItem","parsedState","JSON","parse","console","log","e","fullName","first_name","last_name","trim","name","username","phone","SERVER_URL","SELLER_CHAT_ID","BOT_TOKEN","colorTranslations","optionTranslations","shapeTranslations","materialTranslations","mainButtonClickHandler","_tgWebApp$initDataUns","then","initDataUnsafe","user","prev","stringify","version","platform","MainButton","setText","show","color","textColor","handleSubmit","onClick","offClick","setItem","newState","handleFieldChange","field","value","formatOrderData","formattedProduct","product","formattedShape","shape","formattedMaterial","material","formattedColor","formattedOptions","options","length","translatedOptions","map","option","join","formattedDescription","customDescription","size","colorPreference","formattedOrderData","dataSource","push","key","parameter","columns","title","dataIndex","width","generateOrderText","orderData","contactInfo","sharedPhoneNumber","colorName","colorPreferenceText","orderText","opt","currentState","errorMessage","post","chat_id","text","parse_mode","showProgress","response","data","sellerError","Error","orderDataToSend","id","sendData","hideProgress","handleRequestPhone","_window$Telegram2","webApp","requestContact","invokeCustomMethod","contact","params","URLSearchParams","contactData","decodeURIComponent","get","phone_number","formattedPhone","startsWith","warn","parseError","info","style","alignItems","justifyContent","height","children","tip","status","subTitle","extra","type","close","level","showIcon","marginBottom","closable","display","flexDirection","gap","onChange","target","placeholder","addonBefore","loading","pagination","bordered","disabled"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/src/components/PreviewStep.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Typography, Button, Card, Table, Alert, Spin, Result, message, Input } from 'antd/lib/index';\nimport styled from 'styled-components';\nimport { PreviewStepProps, TelegramUser } from '../types';\nimport { testProxyConnection, axiosInstance } from '../utils/proxyTest';\n\nconst { Title } = Typography;\n\n// Стилизованные компоненты для мобильного интерфейса со светлой темой\nconst Container = styled.div`\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTitle = styled(Title)`\n  text-align: center;\n  margin-bottom: 20px !important;\n  color: #000000 !important;\n  font-size: 22px !important;\n  \n  @media (max-width: 320px) {\n    font-size: 20px !important;\n  }\n`;\n\nconst StyledCard = styled(Card)`\n  border-radius: 12px;\n  margin-bottom: 20px;\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);\n  \n  .ant-table {\n    background: transparent;\n  }\n  \n  .ant-table-thead > tr > th {\n    background-color: #f5f5f5;\n    color: rgba(0, 0, 0, 0.65);\n    font-weight: 500;\n  }\n  \n  .ant-table-tbody > tr > td {\n    color: #000000;\n  }\n  \n  .ant-table-thead > tr > th,\n  .ant-table-tbody > tr > td {\n    padding: 12px 16px;\n    font-size: 14px;\n  }\n  \n  @media (max-width: 576px) {\n    .ant-table-thead > tr > th,\n    .ant-table-tbody > tr > td {\n      padding: 10px 12px;\n      font-size: 13px;\n    }\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 16px;\n`;\n\nconst ActionButton = styled(Button)`\n  min-width: 100px;\n  height: 36px;\n  border-radius: 10px;\n  font-weight: 500;\n  \n  &.submit-button {\n    background-color: #1890ff;\n    border-color: #1890ff;\n    color: #ffffff;\n  }\n`;\n\nconst CloseButton = styled(Button)`\n  min-width: 100px;\n  background-color: #F2F2F7;\n  font-weight: 500;\n  height: 36px;\n  border-radius: 10px;\n  box-shadow: none;\n  border: 1px solid #E5E5EA;\n  color: #000000;\n  \n  &:hover {\n    border-color: #FF3B30;\n    color: #FF3B30;\n  }\n`;\n\nconst PreviewStep: React.FC<PreviewStepProps> = ({ orderDetails, onBack, onClose }) => {\n  // Инициализация Telegram Web App\n  const tgWebApp = window.Telegram?.WebApp;\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [userInfo, setUserInfo] = useState<TelegramUser | null>(null);\n  const [debugInfo, setDebugInfo] = useState<string>('');\n  const [contactRequested, setContactRequested] = useState(false); // Флаг, что контакт запрошен\n  const [showContactRequest, setShowContactRequest] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [phoneNumber, setPhoneNumber] = useState<string | null>(null);\n  const [editableUserInfo, setEditableUserInfo] = useState<{\n    name: string;\n    username: string;\n    phone: string | null;\n  }>(() => {\n    // Пытаемся получить сохраненное состояние из localStorage\n    const savedState = localStorage.getItem('editableUserInfo');\n    if (savedState) {\n      try {\n        const parsedState = JSON.parse(savedState);\n        console.log(\"[DEBUG] Restored state from localStorage:\", parsedState);\n        return parsedState;\n      } catch (e) {\n        console.error('Error parsing saved state:', e);\n      }\n    }\n    \n    // Если нет сохраненного состояния, используем данные пользователя\n    if (userInfo) {\n      const fullName = `${userInfo.first_name} ${userInfo.last_name || ''}`.trim();\n      return {\n        name: fullName,\n        username: userInfo.username || '',\n        phone: null\n      };\n    }\n    \n    return {\n      name: '',\n      username: '',\n      phone: null\n    };\n  });\n  \n  // Сервер с прокси для отправки сообщений\n  const SERVER_URL = \"https://telegram-bot-webhook-proxy.vercel.app/api/send-message\";\n  \n  // ID продавца и токен бота\n  const SELLER_CHAT_ID = \"50122963\";\n  const BOT_TOKEN = \"7408506728:AAGK9d5kddSnMQDwgIYOiEK-6nPFFwgYP-M\";\n  \n  // Перевод цветов на русский\n  const colorTranslations: {[key: string]: string} = {\n    'pink': 'Розовый',\n    'red': 'Красный',\n    'blue': 'Синий',\n    'green': 'Зеленый',\n    'yellow': 'Желтый',\n    'black': 'Черный',\n    'white': 'Белый',\n    'purple': 'Фиолетовый',\n    'orange': 'Оранжевый',\n    'gray': 'Серый',\n    'brown': 'Коричневый',\n    'gold': 'Золотой',\n    'silver': 'Серебряный',\n    'darkred': 'Темно-красный',\n    'darkblue': 'Темно-синий',\n    'darkgreen': 'Темно-зеленый',\n    '#f5222d': 'Красный',\n    '#eb2f96': 'Розовый',\n    '#722ed1': 'Фиолетовый',\n    '#1890ff': 'Синий',\n    '#13c2c2': 'Голубой',\n    '#52c41a': 'Зеленый',\n    '#fadb14': 'Желтый',\n    '#fa8c16': 'Оранжевый',\n    '#000000': 'Черный',\n    '#8c8c8c': 'Серый',\n    '#ffffff': 'Белый',\n    '#8B0000': 'Темно-красный',\n    '#00008B': 'Темно-синий',\n    '#006400': 'Темно-зеленый',\n    '#FFC0CB': 'Розовый'\n  };\n  \n  // Перевод опций на русский\n  const optionTranslations: {[key: string]: string} = {\n    'clasp': 'Застежка',\n    'lining': 'Подкладка',\n    'chain': 'Цепочка',\n    'short_handle': 'Короткая ручка',\n    'long_handle': 'Длинная ручка',\n    'pocket': 'Карман',\n    'zipper': 'Молния',\n    'embroidery': 'Вышивка',\n    'custom_color': 'Индивидуальный цвет'\n  };\n  \n  // Перевод форм на русский\n  const shapeTranslations: {[key: string]: string} = {\n    'kruglaya': 'Круглая',\n    'pryamougolnaya': 'Прямоугольная',\n    'kvadratnaya': 'Квадратная',\n    'trapeciya': 'Трапеция',\n    'mesyac': 'Месяц',\n    'serdce': 'Сердце',\n    'round': 'Круглая',\n    'rectangular': 'Прямоугольная',\n    'square': 'Квадратная',\n    'trapezoid': 'Трапеция',\n    'crescent': 'Месяц',\n    'heart': 'Сердце'\n  };\n  \n  // Перевод материалов на русский\n  const materialTranslations: {[key: string]: string} = {\n    'akril': 'Акрил',\n    'hrustal': 'Хрусталь',\n    'swarovski': 'Swarovski',\n    'acrylic': 'Акрил',\n    'crystal': 'Хрусталь'\n  };\n  \n  // Загружаем информацию о пользователе при монтировании компонента\n  useEffect(() => {\n    let mainButtonClickHandler: (() => void) | null = null;\n    try {\n      // Тестируем подключение к прокси-серверу\n      testProxyConnection().then(success => {\n        if (!success) {\n          console.error(\"Не удалось подключиться к прокси-серверу\");\n          setError(\"Ошибка: Не удалось подключиться к серверу отправки сообщений\");\n        }\n      });\n\n      if (tgWebApp?.initDataUnsafe?.user) {\n        console.log(\"User data available:\", tgWebApp.initDataUnsafe.user);\n        setUserInfo(tgWebApp.initDataUnsafe.user as TelegramUser);\n        setDebugInfo(prev => prev + `\\nUser data: ${JSON.stringify(tgWebApp.initDataUnsafe.user)}`);\n      } else {\n        console.log(\"No user data available\");\n        setDebugInfo(prev => prev + '\\nNo user data available');\n      }\n      \n      console.log(\"Full WebApp data:\", tgWebApp);\n      setDebugInfo(prev => prev + `\\nTelegram WebApp available: ${!!tgWebApp}`);\n      \n      if (tgWebApp) {\n        setDebugInfo(prev => prev + `\\nVersion: ${tgWebApp.version}`);\n        setDebugInfo(prev => prev + `\\nPlatform: ${tgWebApp.platform}`);\n        \n        // Настраиваем MainButton - всегда показываем независимо от userInfo\n        if (tgWebApp.MainButton) {\n          tgWebApp.MainButton.setText('Подтвердить заказ');\n          tgWebApp.MainButton.show();\n          tgWebApp.MainButton.color = '#1890ff';\n          tgWebApp.MainButton.textColor = '#ffffff';\n          \n          mainButtonClickHandler = handleSubmit;\n          tgWebApp.MainButton.onClick(mainButtonClickHandler);\n          console.log(\"MainButton configured with handleSubmit\");\n          setDebugInfo(prev => prev + \"\\nMainButton configured with handleSubmit\");\n        }\n      }\n    } catch (e) {\n      console.error(\"Error initializing component or accessing user data\", e);\n      setDebugInfo(prev => prev + `\\nError initializing: ${e}`);\n      setError(\"Произошла ошибка при инициализации. Попробуйте перезапустить приложение.\");\n    }\n    \n    // Очистка обработчика при размонтировании\n    return () => {\n      if (tgWebApp?.MainButton && mainButtonClickHandler) {\n          tgWebApp.MainButton.offClick(mainButtonClickHandler);\n      }\n    };\n  }, [tgWebApp]); // Убираем userInfo из зависимостей, чтобы кнопка настраивалась независимо от наличия данных\n\n  // Сохраняем состояние в localStorage при каждом изменении\n  useEffect(() => {\n    localStorage.setItem('editableUserInfo', JSON.stringify(editableUserInfo));\n  }, [editableUserInfo]);\n\n  // Обновляем editableUserInfo при изменении phoneNumber\n  useEffect(() => {\n    if (phoneNumber) {\n      console.log(\"[DEBUG] Updating editableUserInfo with phoneNumber:\", phoneNumber);\n      setEditableUserInfo(prev => {\n        const newState = {\n          ...prev,\n          phone: phoneNumber\n        };\n        console.log(\"[DEBUG] New editableUserInfo state after phone update:\", newState);\n        localStorage.setItem('editableUserInfo', JSON.stringify(newState));\n        return newState;\n      });\n    }\n  }, [phoneNumber]);\n\n  // Обновляем editableUserInfo при получении userInfo\n  useEffect(() => {\n    if (userInfo) {\n      console.log(\"[DEBUG] Updating editableUserInfo with userInfo:\", userInfo);\n      const fullName = `${userInfo.first_name} ${userInfo.last_name || ''}`.trim();\n      console.log(\"[DEBUG] Full name:\", fullName);\n      setEditableUserInfo(prev => {\n        const newState = {\n          name: fullName,\n          username: userInfo.username || '',\n          phone: prev.phone || phoneNumber\n        };\n        console.log(\"[DEBUG] New editableUserInfo state after userInfo update:\", newState);\n        localStorage.setItem('editableUserInfo', JSON.stringify(newState));\n        return newState;\n      });\n    }\n  }, [userInfo, phoneNumber]);\n\n  // Обработчик изменения полей\n  const handleFieldChange = (field: string, value: string) => {\n    console.log(\"[DEBUG] handleFieldChange called with field:\", field, \"value:\", value);\n    setEditableUserInfo(prev => {\n      const newState = {\n        ...prev,\n        [field]: value\n      };\n      console.log(\"[DEBUG] New editableUserInfo state:\", newState);\n      localStorage.setItem('editableUserInfo', JSON.stringify(newState));\n      return newState;\n    });\n  };\n\n  // Функция форматирования для отображения данных заказа\n  const formatOrderData = () => {\n    console.log('Formatting order data from:', orderDetails);\n    \n    const formattedProduct = orderDetails.product === 'bag' ? 'Сумка' : \n                            orderDetails.product === 'coaster' ? 'Подстаканник' : \n                            orderDetails.product === 'custom' ? 'Индивидуальный заказ' : \n                            orderDetails.product || '';\n    \n    const formattedShape = orderDetails.shape ? (shapeTranslations[orderDetails.shape] || orderDetails.shape) : '';\n    \n    const formattedMaterial = orderDetails.material ? \n                             (materialTranslations[orderDetails.material] || orderDetails.material) : '';\n    \n    const formattedColor = orderDetails.color ? \n                          (colorTranslations[orderDetails.color] || orderDetails.color) : '';\n    \n    let formattedOptions = '';\n    if (orderDetails.options && orderDetails.options.length > 0) {\n      const translatedOptions = orderDetails.options.map(option => \n        optionTranslations[option] || option\n      );\n      formattedOptions = translatedOptions.join(', ');\n    }\n    \n    const formattedDescription = orderDetails.customDescription || '';\n    \n    return {\n      product: formattedProduct,\n      size: orderDetails.size || '',\n      shape: formattedShape,\n      material: formattedMaterial,\n      color: formattedColor,\n      colorPreference: orderDetails.colorPreference || '',\n      options: formattedOptions,\n      customDescription: formattedDescription\n    };\n  };\n  \n  // Подготовка данных для таблицы\n  const formattedOrderData = formatOrderData();\n  const dataSource = [];\n  \n  // Тип изделия (обязательное поле)\n  dataSource.push({\n    key: 'product',\n    parameter: 'Тип изделия',\n    value: formattedOrderData.product\n  });\n  \n  // Размер (только для сумок)\n  if (orderDetails.product === 'bag' && formattedOrderData.size) {\n    dataSource.push({\n      key: 'size',\n      parameter: 'Размер',\n      value: formattedOrderData.size\n    });\n  }\n  \n  // Форма (только для сумок)\n  if (orderDetails.product === 'bag' && formattedOrderData.shape) {\n    dataSource.push({\n      key: 'shape',\n      parameter: 'Форма',\n      value: formattedOrderData.shape\n    });\n  }\n  \n  // Материал\n  if (formattedOrderData.material) {\n    dataSource.push({\n      key: 'material',\n      parameter: 'Материал',\n      value: formattedOrderData.material\n    });\n  }\n  \n  // Цвет\n  if (formattedOrderData.color) {\n    dataSource.push({\n      key: 'color',\n      parameter: 'Цвет',\n      value: formattedOrderData.color + (formattedOrderData.colorPreference ? `\\nДополнительные пожелания: ${formattedOrderData.colorPreference}` : '')\n    });\n  }\n  \n  // Опции\n  if (formattedOrderData.options) {\n    dataSource.push({\n      key: 'options',\n      parameter: 'Дополнительные опции',\n      value: formattedOrderData.options\n    });\n  }\n  \n  // Описание пользовательского заказа\n  if (formattedOrderData.customDescription) {\n    dataSource.push({\n      key: 'customDescription',\n      parameter: 'Описание',\n      value: formattedOrderData.customDescription\n    });\n  }\n  \n  // Определение колонок таблицы\n  const columns = [\n    {\n      title: '',\n      dataIndex: 'parameter',\n      key: 'parameter',\n      width: '40%',\n    },\n    {\n      title: '',\n      dataIndex: 'value',\n      key: 'value',\n      width: '60%',\n    }\n  ];\n\n  // Функция для генерации текста заказа при отправке  \n  const generateOrderText = (orderData: any, contactInfo: TelegramUser | null, sharedPhoneNumber?: string) => {\n    console.log(\"[DEBUG] Generating order text with data:\", orderData);\n    console.log(\"[DEBUG] Contact info:\", contactInfo);\n    console.log(\"[DEBUG] Editable user info:\", editableUserInfo);\n    \n    const colorName = colorTranslations[orderData.color] || orderData.color;\n    const colorPreferenceText = orderData.colorPreference ? `\\nДополнительные пожелания по цвету: ${orderData.colorPreference}` : '';\n    \n    const orderText = `\n🛍 Новый заказ!\n\nИзделие: ${orderData.product === 'custom' ? 'Индивидуальный заказ' : orderData.product === 'coaster' ? 'Подставка' : 'Сумка'}\n${orderData.product !== 'custom' ? `Размер: ${orderData.size}` : ''}\n${orderData.product !== 'custom' ? `Форма: ${shapeTranslations[orderData.shape] || orderData.shape}` : ''}\n${orderData.product !== 'custom' ? `Материал: ${materialTranslations[orderData.material] || orderData.material}` : ''}\n${orderData.product !== 'custom' ? `Цвет: ${colorName}${colorPreferenceText}` : ''}\n${orderData.options && orderData.options.length > 0 ? `Дополнительные опции:\\n${orderData.options.map((opt: string) => `- ${optionTranslations[opt] || opt}`).join('\\n')}` : ''}\n${orderData.customDescription ? `\\nОписание индивидуального заказа:\\n${orderData.customDescription}` : ''}\n\nКонтактная информация:\nИмя: ${editableUserInfo.name || 'Не указано'}\nUsername: ${editableUserInfo.username ? `@${editableUserInfo.username}` : 'Не указан'}\nТелефон: ${sharedPhoneNumber || 'Не указан'}\n`;\n\n    console.log(\"[DEBUG] Generated order text:\", orderText);\n    return orderText;\n  };\n\n  const handleSubmit = async () => {\n    console.log(\"[DEBUG] handleSubmit called\");\n    \n    // Получаем актуальное состояние из localStorage перед проверкой\n    const savedState = localStorage.getItem('editableUserInfo');\n    console.log(\"[DEBUG] Saved state from localStorage:\", savedState);\n    \n    let currentState = editableUserInfo;\n    if (savedState) {\n      try {\n        currentState = JSON.parse(savedState);\n        console.log(\"[DEBUG] Using state from localStorage:\", currentState);\n      } catch (e) {\n        console.error('Error parsing saved state in handleSubmit:', e);\n      }\n    }\n    \n    console.log(\"[DEBUG] Current state for validation:\", currentState);\n    setDebugInfo(prev => prev + \"\\nhandleSubmit triggered\");\n\n    if (!tgWebApp) {\n      const errorMessage = \"Ошибка: Не удалось получить доступ к Telegram WebApp.\";\n      console.error(errorMessage);\n      setError(errorMessage);\n      setDebugInfo(prev => prev + \"\\nError: Telegram WebApp not initialized\");\n      \n      // Отправляем информацию об ошибке продавцу\n      try {\n        await axiosInstance.post('/sendMessage', {\n          chat_id: SELLER_CHAT_ID,\n          text: `⚠️ Ошибка при оформлении заказа:\\n${errorMessage}\\n\\nПользователь: ${currentState.name || 'Не указано'}\\nUsername: ${currentState.username || 'Не указан'}`,\n          parse_mode: 'Markdown'\n        });\n      } catch (e) {\n        console.error(\"Error sending error notification to seller:\", e);\n      }\n      return;\n    }\n\n    // Проверяем только наличие телефона\n    if (!currentState.phone) {\n      const errorMessage = 'Пожалуйста, укажите номер телефона';\n      console.log(\"[DEBUG] Phone validation failed. Current phone:\", currentState.phone);\n      message.error(errorMessage);\n      \n      // Отправляем информацию об ошибке продавцу\n      try {\n        await axiosInstance.post('/sendMessage', {\n          chat_id: SELLER_CHAT_ID,\n          text: `⚠️ Ошибка валидации при оформлении заказа:\\n${errorMessage}\\n\\nПользователь: ${currentState.name || 'Не указано'}\\nUsername: ${currentState.username || 'Не указан'}`,\n          parse_mode: 'Markdown'\n        });\n      } catch (e) {\n        console.error(\"Error sending error notification to seller:\", e);\n      }\n      return;\n    }\n\n    // Показываем индикатор загрузки на кнопке\n    tgWebApp.MainButton.showProgress(false);\n    setIsSubmitting(true);\n    setError(null);\n    setSuccess(false);\n\n    try {\n      // Сначала отправляем сообщение в чат продавца\n      const orderText = generateOrderText(orderDetails, userInfo, currentState.phone);\n      console.log(\"[DEBUG] Generated order text:\", orderText);\n      \n      try {\n        const response = await axiosInstance.post('/sendMessage', {\n          chat_id: SELLER_CHAT_ID,\n          text: orderText,\n          parse_mode: 'Markdown'\n        });\n        \n        console.log(\"[DEBUG] Message sent to seller successfully:\", response.data);\n        setDebugInfo(prev => prev + \"\\nMessage sent to seller successfully\");\n      } catch (sellerError: any) {\n        const errorMessage = `Ошибка при отправке заказа продавцу: ${sellerError?.message || 'Неизвестная ошибка'}`;\n        console.error(\"[DEBUG] Error sending message to seller:\", sellerError);\n        setDebugInfo(prev => prev + `\\nError sending message to seller: ${sellerError}`);\n        \n        // Отправляем информацию об ошибке продавцу\n        try {\n          await axiosInstance.post('/sendMessage', {\n            chat_id: SELLER_CHAT_ID,\n            text: `⚠️ Ошибка при отправке заказа:\\n${errorMessage}\\n\\nПользователь: ${currentState.name || 'Не указано'}\\nUsername: ${currentState.username || 'Не указан'}\\n\\nДетали заказа:\\n${orderText}`,\n            parse_mode: 'Markdown'\n          });\n        } catch (e) {\n          console.error(\"Error sending error notification to seller:\", e);\n        }\n        \n        throw new Error(errorMessage);\n      }\n\n      // Если сообщение успешно отправлено, отправляем данные в WebApp\n      const orderDataToSend = {\n        ...orderDetails,\n        user: {\n          id: userInfo?.id,\n          name: currentState.name,\n          username: currentState.username,\n          phone: currentState.phone\n        }\n      };\n      \n      console.log(\"[DEBUG] Sending data to WebApp:\", orderDataToSend);\n      tgWebApp.sendData(JSON.stringify(orderDataToSend));\n      console.log(\"[DEBUG] Data sent to WebApp successfully\");\n      setDebugInfo(prev => prev + \"\\nData sent to WebApp successfully\");\n      \n      setSuccess(true);\n      setError(null);\n\n    } catch (e: any) {\n      const errorMessage = e?.message || 'Произошла ошибка при отправке заказа. Попробуйте еще раз.';\n      console.error('[DEBUG] Error in handleSubmit:', e);\n      setError(errorMessage);\n      setDebugInfo(prev => prev + `\\nError in handleSubmit: ${e}`);\n      \n      // Отправляем информацию об ошибке продавцу\n      try {\n        await axiosInstance.post('/sendMessage', {\n          chat_id: SELLER_CHAT_ID,\n          text: `⚠️ Ошибка при оформлении заказа:\\n${errorMessage}\\n\\nПользователь: ${currentState.name || 'Не указано'}\\nUsername: ${currentState.username || 'Не указан'}\\n\\nДетали заказа:\\n${JSON.stringify(orderDetails, null, 2)}`,\n          parse_mode: 'Markdown'\n        });\n      } catch (e) {\n        console.error(\"Error sending error notification to seller:\", e);\n      }\n    } finally {\n      // Скрываем индикатор загрузки\n      tgWebApp.MainButton.hideProgress();\n      setIsSubmitting(false);\n    }\n  };\n\n  const handleRequestPhone = () => {\n    console.log(\"[DEBUG] handleRequestPhone called\");\n    if (!window.Telegram?.WebApp) {\n      console.error('[DEBUG] Telegram WebApp не доступен');\n      message.error('Ошибка: Telegram WebApp не инициализирован.');\n      return;\n    }\n\n    setIsLoading(true);\n    const webApp = window.Telegram.WebApp;\n    console.log(\"[DEBUG] WebApp object:\", webApp);\n    console.log(\"[DEBUG] WebApp version:\", webApp.version);\n    console.log(\"[DEBUG] WebApp platform:\", webApp.platform);\n\n    try {\n      console.log(\"[DEBUG] Requesting contact\");\n      webApp.requestContact((success: boolean) => {\n        console.log(\"[DEBUG] Contact request callback, success:\", success);\n        if (success) {\n          // Контакт был предоставлен, получаем его через getRequestedContact\n          console.log(\"[DEBUG] Contact request was successful\");\n          webApp.invokeCustomMethod('getRequestedContact', {}, (error: any, contact: string) => {\n            if (error) {\n              console.error('[DEBUG] Error getting contact:', error);\n              message.error('Ошибка при получении контакта');\n              setIsLoading(false);\n              return;\n            }\n\n            try {\n              // Декодируем параметры из URL-encoded строки\n              const params = new URLSearchParams(contact);\n              const contactData = JSON.parse(decodeURIComponent(params.get('contact') || '{}'));\n              console.log(\"[DEBUG] Received contact data:\", contactData);\n\n              if (contactData.phone_number) {\n                console.log(\"[DEBUG] Setting phone number:\", contactData.phone_number);\n                const formattedPhone = contactData.phone_number.startsWith('+') ? \n                  contactData.phone_number : \n                  `+${contactData.phone_number}`;\n                \n                setPhoneNumber(formattedPhone);\n                setEditableUserInfo(prev => {\n                  const newState = {\n                    ...prev,\n                    phone: formattedPhone\n                  };\n                  console.log(\"[DEBUG] Updated editableUserInfo with phone:\", newState);\n                  localStorage.setItem('editableUserInfo', JSON.stringify(newState));\n                  return newState;\n                });\n                message.success('Номер телефона получен!');\n              } else {\n                console.warn(\"[DEBUG] No phone number in contact data\");\n                message.error('Не удалось получить номер телефона');\n              }\n            } catch (parseError) {\n              console.error('[DEBUG] Error parsing contact data:', parseError);\n              message.error('Ошибка при обработке данных контакта');\n            } finally {\n              setIsLoading(false);\n            }\n          });\n        } else {\n          console.log(\"[DEBUG] Contact request was cancelled\");\n          setIsLoading(false);\n          message.info('Запрос контакта отменен');\n        }\n      });\n    } catch (error) {\n      console.error('[DEBUG] Error in handleRequestPhone:', error);\n      message.error('Ошибка при запросе номера телефона');\n      setIsLoading(false);\n    }\n  };\n\n  // Отображение состояния загрузки, успеха или ошибки\n  if (isSubmitting) {\n    return <Container style={{ alignItems: 'center', justifyContent: 'center', height: '80vh' }}><Spin size=\"large\" tip=\"Отправка заказа...\" /></Container>;\n  }\n\n  if (success) {\n    return (\n      <Result\n        status=\"success\"\n        title=\"Заказ успешно отправлен!\"\n        subTitle=\"Спасибо за ваш заказ! Мы скоро свяжемся с вами.\"\n        extra={[\n          <Button type=\"primary\" key=\"close\" onClick={() => tgWebApp?.close()}>\n            Закрыть\n          </Button>,\n        ]}\n      />\n    );\n  }\n\n  return (\n    <Container>\n      <StyledTitle level={3}>Подтверждение заказа</StyledTitle>\n      \n      {error && <Alert message={error} type=\"error\" showIcon style={{ marginBottom: '16px' }} closable onClose={() => setError(null)} />}\n      \n      {/* Вывод отладочной информации */} \n      {/* <Alert message={<pre style={{ whiteSpace: 'pre-wrap', wordBreak: 'break-all' }}>{debugInfo}</pre>} type=\"info\" style={{ marginBottom: '16px' }} /> */}\n      \n      {userInfo && (\n        <StyledCard title=\"Ваши данные\">\n          <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n            <div>\n              <strong style={{ display: 'block', marginBottom: '4px' }}>Имя:</strong>\n              <Input\n                value={editableUserInfo.name}\n                onChange={(e) => handleFieldChange('name', e.target.value)}\n                placeholder=\"Введите ваше имя\"\n              />\n            </div>\n            <div>\n              <strong style={{ display: 'block', marginBottom: '4px' }}>Логин:</strong>\n              <Input\n                value={editableUserInfo.username}\n                onChange={(e) => handleFieldChange('username', e.target.value)}\n                placeholder=\"Введите ваш логин\"\n                addonBefore=\"@\"\n              />\n            </div>\n            <div>\n              <strong style={{ display: 'block', marginBottom: '4px' }}>Телефон:</strong>\n              {phoneNumber ? (\n                <Input\n                  value={editableUserInfo.phone || ''}\n                  onChange={(e) => handleFieldChange('phone', e.target.value)}\n                  placeholder=\"Введите номер телефона\"\n                />\n              ) : (\n                <Button \n                  type=\"primary\" \n                  onClick={handleRequestPhone} \n                  loading={isLoading}\n                  style={{ width: '100%' }}\n                >\n                  Получить из Telegram\n                </Button>\n              )}\n            </div>\n          </div>\n        </StyledCard>\n      )}\n      \n      <StyledCard title=\"Детали вашего заказа\">\n        <Table\n          dataSource={dataSource}\n          columns={columns}\n          pagination={false}\n          bordered\n          size=\"small\"\n        />\n      </StyledCard>\n\n      <ButtonContainer>\n        <ActionButton onClick={onBack} disabled={isSubmitting}>Назад</ActionButton>\n      </ButtonContainer>\n    </Container>\n  );\n};\n\nexport default PreviewStep; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
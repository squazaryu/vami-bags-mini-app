{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useModeColor;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEvent = _interopRequireDefault(require(\"rc-util/lib/hooks/useEvent\"));\nvar _useMergedState = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _locale = require(\"../../locale\");\nvar _util = require(\"../util\");\n/**\n * Combine the `color` and `mode` to make sure sync of state.\n */\nfunction useModeColor(defaultValue, value, mode) {\n  const [locale] = (0, _locale.useLocale)('ColorPicker');\n  // ======================== Base ========================\n  // Color\n  const [mergedColor, setMergedColor] = (0, _useMergedState.default)(defaultValue, {\n    value\n  });\n  // Mode\n  const [modeState, setModeState] = React.useState('single');\n  const [modeOptionList, modeSet] = React.useMemo(() => {\n    const list = (Array.isArray(mode) ? mode : [mode]).filter(m => m);\n    if (!list.length) {\n      list.push('single');\n    }\n    const modes = new Set(list);\n    const optionList = [];\n    const pushOption = (modeType, localeTxt) => {\n      if (modes.has(modeType)) {\n        optionList.push({\n          label: localeTxt,\n          value: modeType\n        });\n      }\n    };\n    pushOption('single', locale.singleColor);\n    pushOption('gradient', locale.gradientColor);\n    return [optionList, modes];\n  }, [mode]);\n  // ======================== Post ========================\n  // We need align `mode` with `color` state\n  // >>>>> Color\n  const [cacheColor, setCacheColor] = React.useState(null);\n  const setColor = (0, _useEvent.default)(nextColor => {\n    setCacheColor(nextColor);\n    setMergedColor(nextColor);\n  });\n  const postColor = React.useMemo(() => {\n    const colorObj = (0, _util.generateColor)(mergedColor || '');\n    // Use `cacheColor` in case the color is `cleared`\n    return colorObj.equals(cacheColor) ? cacheColor : colorObj;\n  }, [mergedColor, cacheColor]);\n  // >>>>> Mode\n  const postMode = React.useMemo(() => {\n    var _a;\n    if (modeSet.has(modeState)) {\n      return modeState;\n    }\n    return (_a = modeOptionList[0]) === null || _a === void 0 ? void 0 : _a.value;\n  }, [modeSet, modeState, modeOptionList]);\n  // ======================= Effect =======================\n  // Dynamic update mode when color change\n  React.useEffect(() => {\n    setModeState(postColor.isGradient() ? 'gradient' : 'single');\n  }, [postColor]);\n  // ======================= Return =======================\n  return [postColor, setColor, postMode, setModeState, modeOptionList];\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","_interopRequireWildcard","Object","defineProperty","exports","value","useModeColor","React","_useEvent","_useMergedState","_locale","_util","defaultValue","mode","locale","useLocale","mergedColor","setMergedColor","modeState","setModeState","useState","modeOptionList","modeSet","useMemo","list","Array","isArray","filter","m","length","push","modes","Set","optionList","pushOption","modeType","localeTxt","has","label","singleColor","gradientColor","cacheColor","setCacheColor","setColor","nextColor","postColor","colorObj","generateColor","equals","postMode","_a","useEffect","isGradient"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/color-picker/hooks/useModeColor.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = useModeColor;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _useEvent = _interopRequireDefault(require(\"rc-util/lib/hooks/useEvent\"));\nvar _useMergedState = _interopRequireDefault(require(\"rc-util/lib/hooks/useMergedState\"));\nvar _locale = require(\"../../locale\");\nvar _util = require(\"../util\");\n/**\n * Combine the `color` and `mode` to make sure sync of state.\n */\nfunction useModeColor(defaultValue, value, mode) {\n  const [locale] = (0, _locale.useLocale)('ColorPicker');\n  // ======================== Base ========================\n  // Color\n  const [mergedColor, setMergedColor] = (0, _useMergedState.default)(defaultValue, {\n    value\n  });\n  // Mode\n  const [modeState, setModeState] = React.useState('single');\n  const [modeOptionList, modeSet] = React.useMemo(() => {\n    const list = (Array.isArray(mode) ? mode : [mode]).filter(m => m);\n    if (!list.length) {\n      list.push('single');\n    }\n    const modes = new Set(list);\n    const optionList = [];\n    const pushOption = (modeType, localeTxt) => {\n      if (modes.has(modeType)) {\n        optionList.push({\n          label: localeTxt,\n          value: modeType\n        });\n      }\n    };\n    pushOption('single', locale.singleColor);\n    pushOption('gradient', locale.gradientColor);\n    return [optionList, modes];\n  }, [mode]);\n  // ======================== Post ========================\n  // We need align `mode` with `color` state\n  // >>>>> Color\n  const [cacheColor, setCacheColor] = React.useState(null);\n  const setColor = (0, _useEvent.default)(nextColor => {\n    setCacheColor(nextColor);\n    setMergedColor(nextColor);\n  });\n  const postColor = React.useMemo(() => {\n    const colorObj = (0, _util.generateColor)(mergedColor || '');\n    // Use `cacheColor` in case the color is `cleared`\n    return colorObj.equals(cacheColor) ? cacheColor : colorObj;\n  }, [mergedColor, cacheColor]);\n  // >>>>> Mode\n  const postMode = React.useMemo(() => {\n    var _a;\n    if (modeSet.has(modeState)) {\n      return modeState;\n    }\n    return (_a = modeOptionList[0]) === null || _a === void 0 ? void 0 : _a.value;\n  }, [modeSet, modeState, modeOptionList]);\n  // ======================= Effect =======================\n  // Dynamic update mode when color change\n  React.useEffect(() => {\n    setModeState(postColor.isGradient() ? 'gradient' : 'single');\n  }, [postColor]);\n  // ======================= Return =======================\n  return [postColor, setColor, postMode, setModeState, modeOptionList];\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _style = require(\"../../style\");\nvar _internal = require(\"../../theme/internal\");\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, (0, _style.resetComponent)(token)), {\n      position: 'relative',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${(0, _cssinjs.unit)(lineWidth)} ${lineType} transparent`,\n      '&-image': {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n      '&-lg': Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n      '&-sm': Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [componentCls]: {\n        borderColor: groupBorderColor\n      },\n      '> *:not(:first-child)': {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nconst prepareComponentToken = token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = (0, _internal.mergeToken)(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);","map":{"version":3,"names":["Object","defineProperty","exports","value","prepareComponentToken","default","_cssinjs","require","_style","_internal","genBaseStyle","token","antCls","componentCls","iconCls","avatarBg","avatarColor","containerSize","containerSizeLG","containerSizeSM","textFontSize","textFontSizeLG","textFontSizeSM","borderRadius","borderRadiusLG","borderRadiusSM","lineWidth","lineType","avatarSizeStyle","size","fontSize","radius","width","height","margin","assign","resetComponent","position","display","justifyContent","alignItems","overflow","color","whiteSpace","textAlign","verticalAlign","background","border","unit","objectFit","genGroupStyle","groupBorderColor","groupOverlapping","groupSpace","borderColor","marginInlineStart","controlHeight","controlHeightLG","controlHeightSM","fontSizeLG","fontSizeXL","fontSizeHeading3","marginXS","marginXXS","colorBorderBg","Math","round","_default","genStyleHooks","colorTextLightSolid","colorTextPlaceholder","avatarToken","mergeToken"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/avatar/style/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.prepareComponentToken = exports.default = void 0;\nvar _cssinjs = require(\"@ant-design/cssinjs\");\nvar _style = require(\"../../style\");\nvar _internal = require(\"../../theme/internal\");\nconst genBaseStyle = token => {\n  const {\n    antCls,\n    componentCls,\n    iconCls,\n    avatarBg,\n    avatarColor,\n    containerSize,\n    containerSizeLG,\n    containerSizeSM,\n    textFontSize,\n    textFontSizeLG,\n    textFontSizeSM,\n    borderRadius,\n    borderRadiusLG,\n    borderRadiusSM,\n    lineWidth,\n    lineType\n  } = token;\n  // Avatar size style\n  const avatarSizeStyle = (size, fontSize, radius) => ({\n    width: size,\n    height: size,\n    borderRadius: '50%',\n    [`&${componentCls}-square`]: {\n      borderRadius: radius\n    },\n    [`&${componentCls}-icon`]: {\n      fontSize,\n      [`> ${iconCls}`]: {\n        margin: 0\n      }\n    }\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, (0, _style.resetComponent)(token)), {\n      position: 'relative',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      overflow: 'hidden',\n      color: avatarColor,\n      whiteSpace: 'nowrap',\n      textAlign: 'center',\n      verticalAlign: 'middle',\n      background: avatarBg,\n      border: `${(0, _cssinjs.unit)(lineWidth)} ${lineType} transparent`,\n      '&-image': {\n        background: 'transparent'\n      },\n      [`${antCls}-image-img`]: {\n        display: 'block'\n      }\n    }), avatarSizeStyle(containerSize, textFontSize, borderRadius)), {\n      '&-lg': Object.assign({}, avatarSizeStyle(containerSizeLG, textFontSizeLG, borderRadiusLG)),\n      '&-sm': Object.assign({}, avatarSizeStyle(containerSizeSM, textFontSizeSM, borderRadiusSM)),\n      '> img': {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover'\n      }\n    })\n  };\n};\nconst genGroupStyle = token => {\n  const {\n    componentCls,\n    groupBorderColor,\n    groupOverlapping,\n    groupSpace\n  } = token;\n  return {\n    [`${componentCls}-group`]: {\n      display: 'inline-flex',\n      [componentCls]: {\n        borderColor: groupBorderColor\n      },\n      '> *:not(:first-child)': {\n        marginInlineStart: groupOverlapping\n      }\n    },\n    [`${componentCls}-group-popover`]: {\n      [`${componentCls} + ${componentCls}`]: {\n        marginInlineStart: groupSpace\n      }\n    }\n  };\n};\nconst prepareComponentToken = token => {\n  const {\n    controlHeight,\n    controlHeightLG,\n    controlHeightSM,\n    fontSize,\n    fontSizeLG,\n    fontSizeXL,\n    fontSizeHeading3,\n    marginXS,\n    marginXXS,\n    colorBorderBg\n  } = token;\n  return {\n    containerSize: controlHeight,\n    containerSizeLG: controlHeightLG,\n    containerSizeSM: controlHeightSM,\n    textFontSize: Math.round((fontSizeLG + fontSizeXL) / 2),\n    textFontSizeLG: fontSizeHeading3,\n    textFontSizeSM: fontSize,\n    groupSpace: marginXXS,\n    groupOverlapping: -marginXS,\n    groupBorderColor: colorBorderBg\n  };\n};\nexports.prepareComponentToken = prepareComponentToken;\nvar _default = exports.default = (0, _internal.genStyleHooks)('Avatar', token => {\n  const {\n    colorTextLightSolid,\n    colorTextPlaceholder\n  } = token;\n  const avatarToken = (0, _internal.mergeToken)(token, {\n    avatarBg: colorTextPlaceholder,\n    avatarColor: colorTextLightSolid\n  });\n  return [genBaseStyle(avatarToken), genGroupStyle(avatarToken)];\n}, prepareComponentToken);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
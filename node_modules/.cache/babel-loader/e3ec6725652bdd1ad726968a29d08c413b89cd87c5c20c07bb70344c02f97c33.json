{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcRangeKeys = calcRangeKeys;\nexports.convertDirectoryKeysToNodes = convertDirectoryKeysToNodes;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\nconst RECORD_NONE = 0;\nconst RECORD_START = 1;\nconst RECORD_END = 2;\nfunction traverseNodesKey(treeData, callback, fieldNames) {\n  const {\n    key: fieldKey,\n    children: fieldChildren\n  } = fieldNames;\n  function processNode(dataNode) {\n    const key = dataNode[fieldKey];\n    const children = dataNode[fieldChildren];\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], callback, fieldNames);\n    }\n  }\n  treeData.forEach(processNode);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nfunction calcRangeKeys(_ref) {\n  let {\n    treeData,\n    expandedKeys,\n    startKey,\n    endKey,\n    fieldNames\n  } = _ref;\n  const keys = [];\n  let record = RECORD_NONE;\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n  traverseNodesKey(treeData, key => {\n    if (record === RECORD_END) {\n      return false;\n    }\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n      if (record === RECORD_NONE) {\n        record = RECORD_START;\n      } else if (record === RECORD_START) {\n        record = RECORD_END;\n        return false;\n      }\n    } else if (record === RECORD_START) {\n      // Append selection\n      keys.push(key);\n    }\n    return expandedKeys.includes(key);\n  }, (0, _treeUtil.fillFieldNames)(fieldNames));\n  return keys;\n}\nfunction convertDirectoryKeysToNodes(treeData, keys, fieldNames) {\n  const restKeys = (0, _toConsumableArray2.default)(keys);\n  const nodes = [];\n  traverseNodesKey(treeData, (key, node) => {\n    const index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n    return !!restKeys.length;\n  }, (0, _treeUtil.fillFieldNames)(fieldNames));\n  return nodes;\n}","map":{"version":3,"names":["_interopRequireDefault","require","default","Object","defineProperty","exports","value","calcRangeKeys","convertDirectoryKeysToNodes","_toConsumableArray2","_treeUtil","RECORD_NONE","RECORD_START","RECORD_END","traverseNodesKey","treeData","callback","fieldNames","key","fieldKey","children","fieldChildren","processNode","dataNode","forEach","_ref","expandedKeys","startKey","endKey","keys","record","matchKey","push","includes","fillFieldNames","restKeys","nodes","node","index","indexOf","splice","length"],"sources":["/Users/tumowuh/Desktop/backups/sumki-mini-app_Release_Vers_20250401_221838/node_modules/antd/lib/tree/utils/dictUtil.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcRangeKeys = calcRangeKeys;\nexports.convertDirectoryKeysToNodes = convertDirectoryKeysToNodes;\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _treeUtil = require(\"rc-tree/lib/utils/treeUtil\");\nconst RECORD_NONE = 0;\nconst RECORD_START = 1;\nconst RECORD_END = 2;\nfunction traverseNodesKey(treeData, callback, fieldNames) {\n  const {\n    key: fieldKey,\n    children: fieldChildren\n  } = fieldNames;\n  function processNode(dataNode) {\n    const key = dataNode[fieldKey];\n    const children = dataNode[fieldChildren];\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], callback, fieldNames);\n    }\n  }\n  treeData.forEach(processNode);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nfunction calcRangeKeys({\n  treeData,\n  expandedKeys,\n  startKey,\n  endKey,\n  fieldNames\n}) {\n  const keys = [];\n  let record = RECORD_NONE;\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n  if (!startKey || !endKey) {\n    return [];\n  }\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n  traverseNodesKey(treeData, key => {\n    if (record === RECORD_END) {\n      return false;\n    }\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n      if (record === RECORD_NONE) {\n        record = RECORD_START;\n      } else if (record === RECORD_START) {\n        record = RECORD_END;\n        return false;\n      }\n    } else if (record === RECORD_START) {\n      // Append selection\n      keys.push(key);\n    }\n    return expandedKeys.includes(key);\n  }, (0, _treeUtil.fillFieldNames)(fieldNames));\n  return keys;\n}\nfunction convertDirectoryKeysToNodes(treeData, keys, fieldNames) {\n  const restKeys = (0, _toConsumableArray2.default)(keys);\n  const nodes = [];\n  traverseNodesKey(treeData, (key, node) => {\n    const index = restKeys.indexOf(key);\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n    return !!restKeys.length;\n  }, (0, _treeUtil.fillFieldNames)(fieldNames));\n  return nodes;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
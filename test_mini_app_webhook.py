#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä—è–º–æ–≥–æ –≤—ã–∑–æ–≤–∞ API –±–æ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞ –∏–∑ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

import json
import requests
import logging
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# ID –ø—Ä–æ–¥–∞–≤—Ü–∞ (–ø–æ–ª—É—á–∞—Ç–µ–ª—è –∑–∞–∫–∞–∑–∞)
SELLER_CHAT_ID = "50122963"

# –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–∑ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
order_data = {
    "product": "bag",
    "size": "M",
    "shape": "–∫—Ä—É–≥–ª–∞—è",
    "material": "–∞–∫—Ä–∏–ª",
    "color": "—Ä–æ–∑–æ–≤—ã–π",
    "options": ["–∑–∞—Å—Ç–µ–∂–∫–∞", "–ø–æ–¥–∫–ª–∞–¥"],
    "contact": {
        "id": 12345678,
        "first_name": "–¢–µ—Å—Ç",
        "last_name": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
        "username": "testuser"
    }
}

def send_order_directly_to_bot():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–∫–∞–∑ –Ω–∞–ø—Ä—è–º—É—é –±–æ—Ç—É —á–µ—Ä–µ–∑ API Telegram"""
    try:
        logger.info("–ù–∞—á–∏–Ω–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–∫–∞–∑–∞ —á–µ—Ä–µ–∑ API Telegram...")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∑–∞–∫–∞–∑–∞
        order_text = "üõçÔ∏è *–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –∏–∑ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è*\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞
        if order_data.get('product') == 'bag':
            order_text += "*–¢–∏–ø:* –°—É–º–∫–∞\n"
            if order_data.get('size'): order_text += f"*–†–∞–∑–º–µ—Ä:* {order_data['size']}\n"
            if order_data.get('shape'): order_text += f"*–§–æ—Ä–º–∞:* {order_data['shape']}\n"
        elif order_data.get('product') == 'coaster':
            order_text += "*–¢–∏–ø:* –ü–æ–¥—Å—Ç–∞–∫–∞–Ω–Ω–∏–∫\n"
        else:
            order_text += "*–¢–∏–ø:* –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∑–∞–∫–∞–∑\n"
        
        if order_data.get('material'): order_text += f"*–ú–∞—Ç–µ—Ä–∏–∞–ª:* {order_data['material']}\n"
        if order_data.get('color'): order_text += f"*–¶–≤–µ—Ç:* {order_data['color']}\n"
        
        if order_data.get('options') and order_data['options']:
            order_text += f"*–û–ø—Ü–∏–∏:* {', '.join(order_data['options'])}\n"
        
        if order_data.get('customDescription'):
            order_text += f"\n*–û–ø–∏—Å–∞–Ω–∏–µ:* {order_data['customDescription']}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        order_text += "\n*–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:*\n"
        if order_data.get('contact'):
            contact = order_data['contact']
            if contact.get('username'): order_text += f"Username: @{contact['username']}\n"
            if contact.get('first_name'): order_text += f"–ò–º—è: {contact['first_name']}\n"
            if contact.get('last_name'): order_text += f"–§–∞–º–∏–ª–∏—è: {contact['last_name']}\n"
            if contact.get('id'): order_text += f"ID: {contact['id']}\n"
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º URL API –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        api_url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
        params = {
            "chat_id": SELLER_CHAT_ID,
            "text": order_text,
            "parse_mode": "Markdown"
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API: {api_url}")
        response = requests.post(api_url, json=params)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
        if response.status_code == 200:
            result = response.json()
            if result.get("ok"):
                logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                logger.info(f"–û—Ç–≤–µ—Ç API: {result}")
                return True
            else:
                logger.error(f"API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {result}")
                return False
        else:
            logger.error(f"–û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            logger.error(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞: {traceback.format_exc()}")
        return False

def test_webhook_payload():
    """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –≤–µ–±—Ö—É–∫–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ—Ç –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        logger.info("–¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –≤–µ–±—Ö—É–∫...")
        
        # –°–µ—Ä–≤–µ—Ä–Ω—ã–π URL –±–æ—Ç–∞ (–Ω—É–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π URL)
        webhook_url = "https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        
        # –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤–µ–±—Ö—É–∫–∞ - –∏–º–∏—Ç–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ mini app
        webhook_data = {
            "update_id": 123456789,
            "message": {
                "message_id": 123,
                "from": {
                    "id": 12345678,
                    "is_bot": False,
                    "first_name": "Test",
                    "username": "testuser",
                    "language_code": "ru"
                },
                "chat": {
                    "id": 12345678,
                    "first_name": "Test",
                    "username": "testuser",
                    "type": "private"
                },
                "date": 1613826000,
                "text": json.dumps(order_data)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º JSON —Å –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞
            }
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST-–∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ–±—Ö—É–∫
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ–±—Ö—É–∫: {webhook_url}")
        response = requests.post(webhook_url, json=webhook_data)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç
        if response.status_code == 200:
            logger.info("–í–µ–±—Ö—É–∫ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!")
            logger.info(f"–û—Ç–≤–µ—Ç: {response.text}")
            return True
        else:
            logger.error(f"–û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            logger.error(f"–û—Ç–≤–µ—Ç: {response.text}")
            return False
            
    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        import traceback
        logger.error(f"–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞: {traceback.format_exc()}")
        return False

if __name__ == "__main__":
    logger.info("–ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞...")
    send_order_directly_to_bot() 